// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walrusutil/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ScheduleTaskLister helps list ScheduleTasks.
// All objects returned here must be treated as read-only.
type ScheduleTaskLister interface {
	// List lists all ScheduleTasks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ScheduleTask, err error)
	// ScheduleTasks returns an object that can list and get ScheduleTasks.
	ScheduleTasks(namespace string) ScheduleTaskNamespaceLister
	ScheduleTaskListerExpansion
}

// scheduleTaskLister implements the ScheduleTaskLister interface.
type scheduleTaskLister struct {
	indexer cache.Indexer
}

// NewScheduleTaskLister returns a new ScheduleTaskLister.
func NewScheduleTaskLister(indexer cache.Indexer) ScheduleTaskLister {
	return &scheduleTaskLister{indexer: indexer}
}

// List lists all ScheduleTasks in the indexer.
func (s *scheduleTaskLister) List(selector labels.Selector) (ret []*v1.ScheduleTask, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ScheduleTask))
	})
	return ret, err
}

// ScheduleTasks returns an object that can list and get ScheduleTasks.
func (s *scheduleTaskLister) ScheduleTasks(namespace string) ScheduleTaskNamespaceLister {
	return scheduleTaskNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ScheduleTaskNamespaceLister helps list and get ScheduleTasks.
// All objects returned here must be treated as read-only.
type ScheduleTaskNamespaceLister interface {
	// List lists all ScheduleTasks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ScheduleTask, err error)
	// Get retrieves the ScheduleTask from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ScheduleTask, error)
	ScheduleTaskNamespaceListerExpansion
}

// scheduleTaskNamespaceLister implements the ScheduleTaskNamespaceLister
// interface.
type scheduleTaskNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ScheduleTasks in the indexer for a given namespace.
func (s scheduleTaskNamespaceLister) List(selector labels.Selector) (ret []*v1.ScheduleTask, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ScheduleTask))
	})
	return ret, err
}

// Get retrieves the ScheduleTask from the indexer for a given namespace and name.
func (s scheduleTaskNamespaceLister) Get(name string) (*v1.ScheduleTask, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.SchemeResource("scheduletask"), name)
	}
	return obj.(*v1.ScheduleTask), nil
}
