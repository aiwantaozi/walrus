// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walrus/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SubjectLister helps list Subjects.
// All objects returned here must be treated as read-only.
type SubjectLister interface {
	// List lists all Subjects in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Subject, err error)
	// Subjects returns an object that can list and get Subjects.
	Subjects(namespace string) SubjectNamespaceLister
	SubjectListerExpansion
}

// subjectLister implements the SubjectLister interface.
type subjectLister struct {
	indexer cache.Indexer
}

// NewSubjectLister returns a new SubjectLister.
func NewSubjectLister(indexer cache.Indexer) SubjectLister {
	return &subjectLister{indexer: indexer}
}

// List lists all Subjects in the indexer.
func (s *subjectLister) List(selector labels.Selector) (ret []*v1.Subject, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Subject))
	})
	return ret, err
}

// Subjects returns an object that can list and get Subjects.
func (s *subjectLister) Subjects(namespace string) SubjectNamespaceLister {
	return subjectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SubjectNamespaceLister helps list and get Subjects.
// All objects returned here must be treated as read-only.
type SubjectNamespaceLister interface {
	// List lists all Subjects in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Subject, err error)
	// Get retrieves the Subject from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Subject, error)
	SubjectNamespaceListerExpansion
}

// subjectNamespaceLister implements the SubjectNamespaceLister
// interface.
type subjectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Subjects in the indexer for a given namespace.
func (s subjectNamespaceLister) List(selector labels.Selector) (ret []*v1.Subject, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Subject))
	})
	return ret, err
}

// Get retrieves the Subject from the indexer for a given namespace and name.
func (s subjectNamespaceLister) Get(name string) (*v1.Subject, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.SchemeResource("subject"), name)
	}
	return obj.(*v1.Subject), nil
}
