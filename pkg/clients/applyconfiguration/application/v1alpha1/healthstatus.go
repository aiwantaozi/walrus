// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	health "github.com/argoproj/gitops-engine/pkg/health"
)

// HealthStatusApplyConfiguration represents an declarative configuration of the HealthStatus type for use
// with apply.
type HealthStatusApplyConfiguration struct {
	Status  *health.HealthStatusCode `json:"status,omitempty"`
	Message *string                  `json:"message,omitempty"`
}

// HealthStatusApplyConfiguration constructs an declarative configuration of the HealthStatus type for use with
// apply.
func HealthStatus() *HealthStatusApplyConfiguration {
	return &HealthStatusApplyConfiguration{}
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *HealthStatusApplyConfiguration) WithStatus(value health.HealthStatusCode) *HealthStatusApplyConfiguration {
	b.Status = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *HealthStatusApplyConfiguration) WithMessage(value string) *HealthStatusApplyConfiguration {
	b.Message = &value
	return b
}
