// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ApplicationSetNestedGeneratorApplyConfiguration represents an declarative configuration of the ApplicationSetNestedGenerator type for use
// with apply.
type ApplicationSetNestedGeneratorApplyConfiguration struct {
	List                    *ListGeneratorApplyConfiguration        `json:"list,omitempty"`
	Clusters                *ClusterGeneratorApplyConfiguration     `json:"clusters,omitempty"`
	Git                     *GitGeneratorApplyConfiguration         `json:"git,omitempty"`
	SCMProvider             *SCMProviderGeneratorApplyConfiguration `json:"scmProvider,omitempty"`
	ClusterDecisionResource *DuckTypeGeneratorApplyConfiguration    `json:"clusterDecisionResource,omitempty"`
	PullRequest             *PullRequestGeneratorApplyConfiguration `json:"pullRequest,omitempty"`
	Matrix                  *v1.JSON                                `json:"matrix,omitempty"`
	Merge                   *v1.JSON                                `json:"merge,omitempty"`
	Selector                *metav1.LabelSelectorApplyConfiguration `json:"selector,omitempty"`
	Plugin                  *PluginGeneratorApplyConfiguration      `json:"plugin,omitempty"`
}

// ApplicationSetNestedGeneratorApplyConfiguration constructs an declarative configuration of the ApplicationSetNestedGenerator type for use with
// apply.
func ApplicationSetNestedGenerator() *ApplicationSetNestedGeneratorApplyConfiguration {
	return &ApplicationSetNestedGeneratorApplyConfiguration{}
}

// WithList sets the List field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the List field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithList(value *ListGeneratorApplyConfiguration) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.List = value
	return b
}

// WithClusters sets the Clusters field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Clusters field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithClusters(value *ClusterGeneratorApplyConfiguration) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.Clusters = value
	return b
}

// WithGit sets the Git field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Git field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithGit(value *GitGeneratorApplyConfiguration) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.Git = value
	return b
}

// WithSCMProvider sets the SCMProvider field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SCMProvider field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithSCMProvider(value *SCMProviderGeneratorApplyConfiguration) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.SCMProvider = value
	return b
}

// WithClusterDecisionResource sets the ClusterDecisionResource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterDecisionResource field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithClusterDecisionResource(value *DuckTypeGeneratorApplyConfiguration) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.ClusterDecisionResource = value
	return b
}

// WithPullRequest sets the PullRequest field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PullRequest field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithPullRequest(value *PullRequestGeneratorApplyConfiguration) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.PullRequest = value
	return b
}

// WithMatrix sets the Matrix field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Matrix field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithMatrix(value v1.JSON) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.Matrix = &value
	return b
}

// WithMerge sets the Merge field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Merge field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithMerge(value v1.JSON) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.Merge = &value
	return b
}

// WithSelector sets the Selector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Selector field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithSelector(value *metav1.LabelSelectorApplyConfiguration) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.Selector = value
	return b
}

// WithPlugin sets the Plugin field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Plugin field is set to the value of the last call.
func (b *ApplicationSetNestedGeneratorApplyConfiguration) WithPlugin(value *PluginGeneratorApplyConfiguration) *ApplicationSetNestedGeneratorApplyConfiguration {
	b.Plugin = value
	return b
}
