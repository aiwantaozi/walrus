// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// PullRequestGeneratorApplyConfiguration represents an declarative configuration of the PullRequestGenerator type for use
// with apply.
type PullRequestGeneratorApplyConfiguration struct {
	Github              *PullRequestGeneratorGithubApplyConfiguration          `json:"github,omitempty"`
	GitLab              *PullRequestGeneratorGitLabApplyConfiguration          `json:"gitlab,omitempty"`
	Gitea               *PullRequestGeneratorGiteaApplyConfiguration           `json:"gitea,omitempty"`
	BitbucketServer     *PullRequestGeneratorBitbucketServerApplyConfiguration `json:"bitbucketServer,omitempty"`
	Filters             []PullRequestGeneratorFilterApplyConfiguration         `json:"filters,omitempty"`
	RequeueAfterSeconds *int64                                                 `json:"requeueAfterSeconds,omitempty"`
	Template            *ApplicationSetTemplateApplyConfiguration              `json:"template,omitempty"`
	Bitbucket           *PullRequestGeneratorBitbucketApplyConfiguration       `json:"bitbucket,omitempty"`
	AzureDevOps         *PullRequestGeneratorAzureDevOpsApplyConfiguration     `json:"azuredevops,omitempty"`
}

// PullRequestGeneratorApplyConfiguration constructs an declarative configuration of the PullRequestGenerator type for use with
// apply.
func PullRequestGenerator() *PullRequestGeneratorApplyConfiguration {
	return &PullRequestGeneratorApplyConfiguration{}
}

// WithGithub sets the Github field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Github field is set to the value of the last call.
func (b *PullRequestGeneratorApplyConfiguration) WithGithub(value *PullRequestGeneratorGithubApplyConfiguration) *PullRequestGeneratorApplyConfiguration {
	b.Github = value
	return b
}

// WithGitLab sets the GitLab field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitLab field is set to the value of the last call.
func (b *PullRequestGeneratorApplyConfiguration) WithGitLab(value *PullRequestGeneratorGitLabApplyConfiguration) *PullRequestGeneratorApplyConfiguration {
	b.GitLab = value
	return b
}

// WithGitea sets the Gitea field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Gitea field is set to the value of the last call.
func (b *PullRequestGeneratorApplyConfiguration) WithGitea(value *PullRequestGeneratorGiteaApplyConfiguration) *PullRequestGeneratorApplyConfiguration {
	b.Gitea = value
	return b
}

// WithBitbucketServer sets the BitbucketServer field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BitbucketServer field is set to the value of the last call.
func (b *PullRequestGeneratorApplyConfiguration) WithBitbucketServer(value *PullRequestGeneratorBitbucketServerApplyConfiguration) *PullRequestGeneratorApplyConfiguration {
	b.BitbucketServer = value
	return b
}

// WithFilters adds the given value to the Filters field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Filters field.
func (b *PullRequestGeneratorApplyConfiguration) WithFilters(values ...*PullRequestGeneratorFilterApplyConfiguration) *PullRequestGeneratorApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithFilters")
		}
		b.Filters = append(b.Filters, *values[i])
	}
	return b
}

// WithRequeueAfterSeconds sets the RequeueAfterSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequeueAfterSeconds field is set to the value of the last call.
func (b *PullRequestGeneratorApplyConfiguration) WithRequeueAfterSeconds(value int64) *PullRequestGeneratorApplyConfiguration {
	b.RequeueAfterSeconds = &value
	return b
}

// WithTemplate sets the Template field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Template field is set to the value of the last call.
func (b *PullRequestGeneratorApplyConfiguration) WithTemplate(value *ApplicationSetTemplateApplyConfiguration) *PullRequestGeneratorApplyConfiguration {
	b.Template = value
	return b
}

// WithBitbucket sets the Bitbucket field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bitbucket field is set to the value of the last call.
func (b *PullRequestGeneratorApplyConfiguration) WithBitbucket(value *PullRequestGeneratorBitbucketApplyConfiguration) *PullRequestGeneratorApplyConfiguration {
	b.Bitbucket = value
	return b
}

// WithAzureDevOps sets the AzureDevOps field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AzureDevOps field is set to the value of the last call.
func (b *PullRequestGeneratorApplyConfiguration) WithAzureDevOps(value *PullRequestGeneratorAzureDevOpsApplyConfiguration) *PullRequestGeneratorApplyConfiguration {
	b.AzureDevOps = value
	return b
}
