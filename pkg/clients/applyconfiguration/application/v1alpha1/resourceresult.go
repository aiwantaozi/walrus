// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	common "github.com/argoproj/gitops-engine/pkg/sync/common"
)

// ResourceResultApplyConfiguration represents an declarative configuration of the ResourceResult type for use
// with apply.
type ResourceResultApplyConfiguration struct {
	Group     *string                `json:"group,omitempty"`
	Version   *string                `json:"version,omitempty"`
	Kind      *string                `json:"kind,omitempty"`
	Namespace *string                `json:"namespace,omitempty"`
	Name      *string                `json:"name,omitempty"`
	Status    *common.ResultCode     `json:"status,omitempty"`
	Message   *string                `json:"message,omitempty"`
	HookType  *common.HookType       `json:"hookType,omitempty"`
	HookPhase *common.OperationPhase `json:"hookPhase,omitempty"`
	SyncPhase *common.SyncPhase      `json:"syncPhase,omitempty"`
}

// ResourceResultApplyConfiguration constructs an declarative configuration of the ResourceResult type for use with
// apply.
func ResourceResult() *ResourceResultApplyConfiguration {
	return &ResourceResultApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithGroup(value string) *ResourceResultApplyConfiguration {
	b.Group = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithVersion(value string) *ResourceResultApplyConfiguration {
	b.Version = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithKind(value string) *ResourceResultApplyConfiguration {
	b.Kind = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithNamespace(value string) *ResourceResultApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithName(value string) *ResourceResultApplyConfiguration {
	b.Name = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithStatus(value common.ResultCode) *ResourceResultApplyConfiguration {
	b.Status = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithMessage(value string) *ResourceResultApplyConfiguration {
	b.Message = &value
	return b
}

// WithHookType sets the HookType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HookType field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithHookType(value common.HookType) *ResourceResultApplyConfiguration {
	b.HookType = &value
	return b
}

// WithHookPhase sets the HookPhase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HookPhase field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithHookPhase(value common.OperationPhase) *ResourceResultApplyConfiguration {
	b.HookPhase = &value
	return b
}

// WithSyncPhase sets the SyncPhase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SyncPhase field is set to the value of the last call.
func (b *ResourceResultApplyConfiguration) WithSyncPhase(value common.SyncPhase) *ResourceResultApplyConfiguration {
	b.SyncPhase = &value
	return b
}
