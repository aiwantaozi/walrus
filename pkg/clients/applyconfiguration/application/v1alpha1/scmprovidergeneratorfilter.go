// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// SCMProviderGeneratorFilterApplyConfiguration represents an declarative configuration of the SCMProviderGeneratorFilter type for use
// with apply.
type SCMProviderGeneratorFilterApplyConfiguration struct {
	RepositoryMatch *string  `json:"repositoryMatch,omitempty"`
	PathsExist      []string `json:"pathsExist,omitempty"`
	PathsDoNotExist []string `json:"pathsDoNotExist,omitempty"`
	LabelMatch      *string  `json:"labelMatch,omitempty"`
	BranchMatch     *string  `json:"branchMatch,omitempty"`
}

// SCMProviderGeneratorFilterApplyConfiguration constructs an declarative configuration of the SCMProviderGeneratorFilter type for use with
// apply.
func SCMProviderGeneratorFilter() *SCMProviderGeneratorFilterApplyConfiguration {
	return &SCMProviderGeneratorFilterApplyConfiguration{}
}

// WithRepositoryMatch sets the RepositoryMatch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RepositoryMatch field is set to the value of the last call.
func (b *SCMProviderGeneratorFilterApplyConfiguration) WithRepositoryMatch(value string) *SCMProviderGeneratorFilterApplyConfiguration {
	b.RepositoryMatch = &value
	return b
}

// WithPathsExist adds the given value to the PathsExist field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the PathsExist field.
func (b *SCMProviderGeneratorFilterApplyConfiguration) WithPathsExist(values ...string) *SCMProviderGeneratorFilterApplyConfiguration {
	for i := range values {
		b.PathsExist = append(b.PathsExist, values[i])
	}
	return b
}

// WithPathsDoNotExist adds the given value to the PathsDoNotExist field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the PathsDoNotExist field.
func (b *SCMProviderGeneratorFilterApplyConfiguration) WithPathsDoNotExist(values ...string) *SCMProviderGeneratorFilterApplyConfiguration {
	for i := range values {
		b.PathsDoNotExist = append(b.PathsDoNotExist, values[i])
	}
	return b
}

// WithLabelMatch sets the LabelMatch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LabelMatch field is set to the value of the last call.
func (b *SCMProviderGeneratorFilterApplyConfiguration) WithLabelMatch(value string) *SCMProviderGeneratorFilterApplyConfiguration {
	b.LabelMatch = &value
	return b
}

// WithBranchMatch sets the BranchMatch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BranchMatch field is set to the value of the last call.
func (b *SCMProviderGeneratorFilterApplyConfiguration) WithBranchMatch(value string) *SCMProviderGeneratorFilterApplyConfiguration {
	b.BranchMatch = &value
	return b
}
