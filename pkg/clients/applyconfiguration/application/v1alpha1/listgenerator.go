// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

// ListGeneratorApplyConfiguration represents an declarative configuration of the ListGenerator type for use
// with apply.
type ListGeneratorApplyConfiguration struct {
	Elements     []v1.JSON                                 `json:"elements,omitempty"`
	Template     *ApplicationSetTemplateApplyConfiguration `json:"template,omitempty"`
	ElementsYaml *string                                   `json:"elementsYaml,omitempty"`
}

// ListGeneratorApplyConfiguration constructs an declarative configuration of the ListGenerator type for use with
// apply.
func ListGenerator() *ListGeneratorApplyConfiguration {
	return &ListGeneratorApplyConfiguration{}
}

// WithElements adds the given value to the Elements field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Elements field.
func (b *ListGeneratorApplyConfiguration) WithElements(values ...v1.JSON) *ListGeneratorApplyConfiguration {
	for i := range values {
		b.Elements = append(b.Elements, values[i])
	}
	return b
}

// WithTemplate sets the Template field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Template field is set to the value of the last call.
func (b *ListGeneratorApplyConfiguration) WithTemplate(value *ApplicationSetTemplateApplyConfiguration) *ListGeneratorApplyConfiguration {
	b.Template = value
	return b
}

// WithElementsYaml sets the ElementsYaml field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ElementsYaml field is set to the value of the last call.
func (b *ListGeneratorApplyConfiguration) WithElementsYaml(value string) *ListGeneratorApplyConfiguration {
	b.ElementsYaml = &value
	return b
}
