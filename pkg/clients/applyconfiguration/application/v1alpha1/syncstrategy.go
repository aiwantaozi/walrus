// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// SyncStrategyApplyConfiguration represents an declarative configuration of the SyncStrategy type for use
// with apply.
type SyncStrategyApplyConfiguration struct {
	Apply *SyncStrategyApplyApplyConfiguration `json:"apply,omitempty"`
	Hook  *SyncStrategyHookApplyConfiguration  `json:"hook,omitempty"`
}

// SyncStrategyApplyConfiguration constructs an declarative configuration of the SyncStrategy type for use with
// apply.
func SyncStrategy() *SyncStrategyApplyConfiguration {
	return &SyncStrategyApplyConfiguration{}
}

// WithApply sets the Apply field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Apply field is set to the value of the last call.
func (b *SyncStrategyApplyConfiguration) WithApply(value *SyncStrategyApplyApplyConfiguration) *SyncStrategyApplyConfiguration {
	b.Apply = value
	return b
}

// WithHook sets the Hook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Hook field is set to the value of the last call.
func (b *SyncStrategyApplyConfiguration) WithHook(value *SyncStrategyHookApplyConfiguration) *SyncStrategyApplyConfiguration {
	b.Hook = value
	return b
}
