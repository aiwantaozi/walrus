// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// PullRequestGeneratorGithubApplyConfiguration represents an declarative configuration of the PullRequestGeneratorGithub type for use
// with apply.
type PullRequestGeneratorGithubApplyConfiguration struct {
	Owner         *string                      `json:"owner,omitempty"`
	Repo          *string                      `json:"repo,omitempty"`
	API           *string                      `json:"api,omitempty"`
	TokenRef      *SecretRefApplyConfiguration `json:"tokenRef,omitempty"`
	AppSecretName *string                      `json:"appSecretName,omitempty"`
	Labels        []string                     `json:"labels,omitempty"`
}

// PullRequestGeneratorGithubApplyConfiguration constructs an declarative configuration of the PullRequestGeneratorGithub type for use with
// apply.
func PullRequestGeneratorGithub() *PullRequestGeneratorGithubApplyConfiguration {
	return &PullRequestGeneratorGithubApplyConfiguration{}
}

// WithOwner sets the Owner field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Owner field is set to the value of the last call.
func (b *PullRequestGeneratorGithubApplyConfiguration) WithOwner(value string) *PullRequestGeneratorGithubApplyConfiguration {
	b.Owner = &value
	return b
}

// WithRepo sets the Repo field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Repo field is set to the value of the last call.
func (b *PullRequestGeneratorGithubApplyConfiguration) WithRepo(value string) *PullRequestGeneratorGithubApplyConfiguration {
	b.Repo = &value
	return b
}

// WithAPI sets the API field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the API field is set to the value of the last call.
func (b *PullRequestGeneratorGithubApplyConfiguration) WithAPI(value string) *PullRequestGeneratorGithubApplyConfiguration {
	b.API = &value
	return b
}

// WithTokenRef sets the TokenRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TokenRef field is set to the value of the last call.
func (b *PullRequestGeneratorGithubApplyConfiguration) WithTokenRef(value *SecretRefApplyConfiguration) *PullRequestGeneratorGithubApplyConfiguration {
	b.TokenRef = value
	return b
}

// WithAppSecretName sets the AppSecretName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AppSecretName field is set to the value of the last call.
func (b *PullRequestGeneratorGithubApplyConfiguration) WithAppSecretName(value string) *PullRequestGeneratorGithubApplyConfiguration {
	b.AppSecretName = &value
	return b
}

// WithLabels adds the given value to the Labels field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Labels field.
func (b *PullRequestGeneratorGithubApplyConfiguration) WithLabels(values ...string) *PullRequestGeneratorGithubApplyConfiguration {
	for i := range values {
		b.Labels = append(b.Labels, values[i])
	}
	return b
}
