// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// KustomizeSelectorApplyConfiguration represents an declarative configuration of the KustomizeSelector type for use
// with apply.
type KustomizeSelectorApplyConfiguration struct {
	KustomizeResIdApplyConfiguration `json:",omitempty,inline"`
	AnnotationSelector               *string `json:"annotationSelector,omitempty"`
	LabelSelector                    *string `json:"labelSelector,omitempty"`
}

// KustomizeSelectorApplyConfiguration constructs an declarative configuration of the KustomizeSelector type for use with
// apply.
func KustomizeSelector() *KustomizeSelectorApplyConfiguration {
	return &KustomizeSelectorApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *KustomizeSelectorApplyConfiguration) WithGroup(value string) *KustomizeSelectorApplyConfiguration {
	b.Group = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *KustomizeSelectorApplyConfiguration) WithVersion(value string) *KustomizeSelectorApplyConfiguration {
	b.Version = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *KustomizeSelectorApplyConfiguration) WithKind(value string) *KustomizeSelectorApplyConfiguration {
	b.Kind = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *KustomizeSelectorApplyConfiguration) WithName(value string) *KustomizeSelectorApplyConfiguration {
	b.Name = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *KustomizeSelectorApplyConfiguration) WithNamespace(value string) *KustomizeSelectorApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithAnnotationSelector sets the AnnotationSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AnnotationSelector field is set to the value of the last call.
func (b *KustomizeSelectorApplyConfiguration) WithAnnotationSelector(value string) *KustomizeSelectorApplyConfiguration {
	b.AnnotationSelector = &value
	return b
}

// WithLabelSelector sets the LabelSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LabelSelector field is set to the value of the last call.
func (b *KustomizeSelectorApplyConfiguration) WithLabelSelector(value string) *KustomizeSelectorApplyConfiguration {
	b.LabelSelector = &value
	return b
}
