// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ApplicationSetApplicationStatusApplyConfiguration represents an declarative configuration of the ApplicationSetApplicationStatus type for use
// with apply.
type ApplicationSetApplicationStatusApplyConfiguration struct {
	Application        *string  `json:"application,omitempty"`
	LastTransitionTime *v1.Time `json:"lastTransitionTime,omitempty"`
	Message            *string  `json:"message,omitempty"`
	Status             *string  `json:"status,omitempty"`
	Step               *string  `json:"step,omitempty"`
}

// ApplicationSetApplicationStatusApplyConfiguration constructs an declarative configuration of the ApplicationSetApplicationStatus type for use with
// apply.
func ApplicationSetApplicationStatus() *ApplicationSetApplicationStatusApplyConfiguration {
	return &ApplicationSetApplicationStatusApplyConfiguration{}
}

// WithApplication sets the Application field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Application field is set to the value of the last call.
func (b *ApplicationSetApplicationStatusApplyConfiguration) WithApplication(value string) *ApplicationSetApplicationStatusApplyConfiguration {
	b.Application = &value
	return b
}

// WithLastTransitionTime sets the LastTransitionTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastTransitionTime field is set to the value of the last call.
func (b *ApplicationSetApplicationStatusApplyConfiguration) WithLastTransitionTime(value v1.Time) *ApplicationSetApplicationStatusApplyConfiguration {
	b.LastTransitionTime = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *ApplicationSetApplicationStatusApplyConfiguration) WithMessage(value string) *ApplicationSetApplicationStatusApplyConfiguration {
	b.Message = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *ApplicationSetApplicationStatusApplyConfiguration) WithStatus(value string) *ApplicationSetApplicationStatusApplyConfiguration {
	b.Status = &value
	return b
}

// WithStep sets the Step field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Step field is set to the value of the last call.
func (b *ApplicationSetApplicationStatusApplyConfiguration) WithStep(value string) *ApplicationSetApplicationStatusApplyConfiguration {
	b.Step = &value
	return b
}
