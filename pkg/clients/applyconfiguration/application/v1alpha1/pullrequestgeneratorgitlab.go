// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// PullRequestGeneratorGitLabApplyConfiguration represents an declarative configuration of the PullRequestGeneratorGitLab type for use
// with apply.
type PullRequestGeneratorGitLabApplyConfiguration struct {
	Project          *string                      `json:"project,omitempty"`
	API              *string                      `json:"api,omitempty"`
	TokenRef         *SecretRefApplyConfiguration `json:"tokenRef,omitempty"`
	Labels           []string                     `json:"labels,omitempty"`
	PullRequestState *string                      `json:"pullRequestState,omitempty"`
	Insecure         *bool                        `json:"insecure,omitempty"`
}

// PullRequestGeneratorGitLabApplyConfiguration constructs an declarative configuration of the PullRequestGeneratorGitLab type for use with
// apply.
func PullRequestGeneratorGitLab() *PullRequestGeneratorGitLabApplyConfiguration {
	return &PullRequestGeneratorGitLabApplyConfiguration{}
}

// WithProject sets the Project field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Project field is set to the value of the last call.
func (b *PullRequestGeneratorGitLabApplyConfiguration) WithProject(value string) *PullRequestGeneratorGitLabApplyConfiguration {
	b.Project = &value
	return b
}

// WithAPI sets the API field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the API field is set to the value of the last call.
func (b *PullRequestGeneratorGitLabApplyConfiguration) WithAPI(value string) *PullRequestGeneratorGitLabApplyConfiguration {
	b.API = &value
	return b
}

// WithTokenRef sets the TokenRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TokenRef field is set to the value of the last call.
func (b *PullRequestGeneratorGitLabApplyConfiguration) WithTokenRef(value *SecretRefApplyConfiguration) *PullRequestGeneratorGitLabApplyConfiguration {
	b.TokenRef = value
	return b
}

// WithLabels adds the given value to the Labels field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Labels field.
func (b *PullRequestGeneratorGitLabApplyConfiguration) WithLabels(values ...string) *PullRequestGeneratorGitLabApplyConfiguration {
	for i := range values {
		b.Labels = append(b.Labels, values[i])
	}
	return b
}

// WithPullRequestState sets the PullRequestState field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PullRequestState field is set to the value of the last call.
func (b *PullRequestGeneratorGitLabApplyConfiguration) WithPullRequestState(value string) *PullRequestGeneratorGitLabApplyConfiguration {
	b.PullRequestState = &value
	return b
}

// WithInsecure sets the Insecure field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Insecure field is set to the value of the last call.
func (b *PullRequestGeneratorGitLabApplyConfiguration) WithInsecure(value bool) *PullRequestGeneratorGitLabApplyConfiguration {
	b.Insecure = &value
	return b
}
