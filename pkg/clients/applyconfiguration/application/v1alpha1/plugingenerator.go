// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// PluginGeneratorApplyConfiguration represents an declarative configuration of the PluginGenerator type for use
// with apply.
type PluginGeneratorApplyConfiguration struct {
	ConfigMapRef        *PluginConfigMapRefApplyConfiguration     `json:"configMapRef,omitempty"`
	Input               *PluginInputApplyConfiguration            `json:"input,omitempty"`
	RequeueAfterSeconds *int64                                    `json:"requeueAfterSeconds,omitempty"`
	Template            *ApplicationSetTemplateApplyConfiguration `json:"template,omitempty"`
	Values              map[string]string                         `json:"values,omitempty"`
}

// PluginGeneratorApplyConfiguration constructs an declarative configuration of the PluginGenerator type for use with
// apply.
func PluginGenerator() *PluginGeneratorApplyConfiguration {
	return &PluginGeneratorApplyConfiguration{}
}

// WithConfigMapRef sets the ConfigMapRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ConfigMapRef field is set to the value of the last call.
func (b *PluginGeneratorApplyConfiguration) WithConfigMapRef(value *PluginConfigMapRefApplyConfiguration) *PluginGeneratorApplyConfiguration {
	b.ConfigMapRef = value
	return b
}

// WithInput sets the Input field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Input field is set to the value of the last call.
func (b *PluginGeneratorApplyConfiguration) WithInput(value *PluginInputApplyConfiguration) *PluginGeneratorApplyConfiguration {
	b.Input = value
	return b
}

// WithRequeueAfterSeconds sets the RequeueAfterSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequeueAfterSeconds field is set to the value of the last call.
func (b *PluginGeneratorApplyConfiguration) WithRequeueAfterSeconds(value int64) *PluginGeneratorApplyConfiguration {
	b.RequeueAfterSeconds = &value
	return b
}

// WithTemplate sets the Template field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Template field is set to the value of the last call.
func (b *PluginGeneratorApplyConfiguration) WithTemplate(value *ApplicationSetTemplateApplyConfiguration) *PluginGeneratorApplyConfiguration {
	b.Template = value
	return b
}

// WithValues puts the entries into the Values field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Values field,
// overwriting an existing map entries in Values field with the same key.
func (b *PluginGeneratorApplyConfiguration) WithValues(entries map[string]string) *PluginGeneratorApplyConfiguration {
	if b.Values == nil && len(entries) > 0 {
		b.Values = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.Values[k] = v
	}
	return b
}
