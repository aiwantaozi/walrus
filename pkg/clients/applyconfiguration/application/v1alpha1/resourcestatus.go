// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1"
)

// ResourceStatusApplyConfiguration represents an declarative configuration of the ResourceStatus type for use
// with apply.
type ResourceStatusApplyConfiguration struct {
	Group           *string                         `json:"group,omitempty"`
	Version         *string                         `json:"version,omitempty"`
	Kind            *string                         `json:"kind,omitempty"`
	Namespace       *string                         `json:"namespace,omitempty"`
	Name            *string                         `json:"name,omitempty"`
	Status          *v1alpha1.SyncStatusCode        `json:"status,omitempty"`
	Health          *HealthStatusApplyConfiguration `json:"health,omitempty"`
	Hook            *bool                           `json:"hook,omitempty"`
	RequiresPruning *bool                           `json:"requiresPruning,omitempty"`
	SyncWave        *int64                          `json:"syncWave,omitempty"`
}

// ResourceStatusApplyConfiguration constructs an declarative configuration of the ResourceStatus type for use with
// apply.
func ResourceStatus() *ResourceStatusApplyConfiguration {
	return &ResourceStatusApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithGroup(value string) *ResourceStatusApplyConfiguration {
	b.Group = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithVersion(value string) *ResourceStatusApplyConfiguration {
	b.Version = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithKind(value string) *ResourceStatusApplyConfiguration {
	b.Kind = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithNamespace(value string) *ResourceStatusApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithName(value string) *ResourceStatusApplyConfiguration {
	b.Name = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithStatus(value v1alpha1.SyncStatusCode) *ResourceStatusApplyConfiguration {
	b.Status = &value
	return b
}

// WithHealth sets the Health field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Health field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithHealth(value *HealthStatusApplyConfiguration) *ResourceStatusApplyConfiguration {
	b.Health = value
	return b
}

// WithHook sets the Hook field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Hook field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithHook(value bool) *ResourceStatusApplyConfiguration {
	b.Hook = &value
	return b
}

// WithRequiresPruning sets the RequiresPruning field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RequiresPruning field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithRequiresPruning(value bool) *ResourceStatusApplyConfiguration {
	b.RequiresPruning = &value
	return b
}

// WithSyncWave sets the SyncWave field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SyncWave field is set to the value of the last call.
func (b *ResourceStatusApplyConfiguration) WithSyncWave(value int64) *ResourceStatusApplyConfiguration {
	b.SyncWave = &value
	return b
}
