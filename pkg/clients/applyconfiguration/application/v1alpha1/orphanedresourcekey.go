// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// OrphanedResourceKeyApplyConfiguration represents an declarative configuration of the OrphanedResourceKey type for use
// with apply.
type OrphanedResourceKeyApplyConfiguration struct {
	Group *string `json:"group,omitempty"`
	Kind  *string `json:"kind,omitempty"`
	Name  *string `json:"name,omitempty"`
}

// OrphanedResourceKeyApplyConfiguration constructs an declarative configuration of the OrphanedResourceKey type for use with
// apply.
func OrphanedResourceKey() *OrphanedResourceKeyApplyConfiguration {
	return &OrphanedResourceKeyApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *OrphanedResourceKeyApplyConfiguration) WithGroup(value string) *OrphanedResourceKeyApplyConfiguration {
	b.Group = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *OrphanedResourceKeyApplyConfiguration) WithKind(value string) *OrphanedResourceKeyApplyConfiguration {
	b.Kind = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *OrphanedResourceKeyApplyConfiguration) WithName(value string) *OrphanedResourceKeyApplyConfiguration {
	b.Name = &value
	return b
}
