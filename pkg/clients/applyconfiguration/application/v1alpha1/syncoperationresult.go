// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1"
)

// SyncOperationResultApplyConfiguration represents an declarative configuration of the SyncOperationResult type for use
// with apply.
type SyncOperationResultApplyConfiguration struct {
	Resources                *v1alpha1.ResourceResults                   `json:"resources,omitempty"`
	Revision                 *string                                     `json:"revision,omitempty"`
	Source                   *ApplicationSourceApplyConfiguration        `json:"source,omitempty"`
	Sources                  *v1alpha1.ApplicationSources                `json:"sources,omitempty"`
	Revisions                []string                                    `json:"revisions,omitempty"`
	ManagedNamespaceMetadata *ManagedNamespaceMetadataApplyConfiguration `json:"managedNamespaceMetadata,omitempty"`
}

// SyncOperationResultApplyConfiguration constructs an declarative configuration of the SyncOperationResult type for use with
// apply.
func SyncOperationResult() *SyncOperationResultApplyConfiguration {
	return &SyncOperationResultApplyConfiguration{}
}

// WithResources sets the Resources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resources field is set to the value of the last call.
func (b *SyncOperationResultApplyConfiguration) WithResources(value v1alpha1.ResourceResults) *SyncOperationResultApplyConfiguration {
	b.Resources = &value
	return b
}

// WithRevision sets the Revision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Revision field is set to the value of the last call.
func (b *SyncOperationResultApplyConfiguration) WithRevision(value string) *SyncOperationResultApplyConfiguration {
	b.Revision = &value
	return b
}

// WithSource sets the Source field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Source field is set to the value of the last call.
func (b *SyncOperationResultApplyConfiguration) WithSource(value *ApplicationSourceApplyConfiguration) *SyncOperationResultApplyConfiguration {
	b.Source = value
	return b
}

// WithSources sets the Sources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Sources field is set to the value of the last call.
func (b *SyncOperationResultApplyConfiguration) WithSources(value v1alpha1.ApplicationSources) *SyncOperationResultApplyConfiguration {
	b.Sources = &value
	return b
}

// WithRevisions adds the given value to the Revisions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Revisions field.
func (b *SyncOperationResultApplyConfiguration) WithRevisions(values ...string) *SyncOperationResultApplyConfiguration {
	for i := range values {
		b.Revisions = append(b.Revisions, values[i])
	}
	return b
}

// WithManagedNamespaceMetadata sets the ManagedNamespaceMetadata field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ManagedNamespaceMetadata field is set to the value of the last call.
func (b *SyncOperationResultApplyConfiguration) WithManagedNamespaceMetadata(value *ManagedNamespaceMetadataApplyConfiguration) *SyncOperationResultApplyConfiguration {
	b.ManagedNamespaceMetadata = value
	return b
}
