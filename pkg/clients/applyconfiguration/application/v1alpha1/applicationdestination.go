// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// ApplicationDestinationApplyConfiguration represents an declarative configuration of the ApplicationDestination type for use
// with apply.
type ApplicationDestinationApplyConfiguration struct {
	Server    *string `json:"server,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Name      *string `json:"name,omitempty"`
}

// ApplicationDestinationApplyConfiguration constructs an declarative configuration of the ApplicationDestination type for use with
// apply.
func ApplicationDestination() *ApplicationDestinationApplyConfiguration {
	return &ApplicationDestinationApplyConfiguration{}
}

// WithServer sets the Server field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Server field is set to the value of the last call.
func (b *ApplicationDestinationApplyConfiguration) WithServer(value string) *ApplicationDestinationApplyConfiguration {
	b.Server = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ApplicationDestinationApplyConfiguration) WithNamespace(value string) *ApplicationDestinationApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ApplicationDestinationApplyConfiguration) WithName(value string) *ApplicationDestinationApplyConfiguration {
	b.Name = &value
	return b
}
