// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// SCMProviderGeneratorGitlabApplyConfiguration represents an declarative configuration of the SCMProviderGeneratorGitlab type for use
// with apply.
type SCMProviderGeneratorGitlabApplyConfiguration struct {
	Group                 *string                      `json:"group,omitempty"`
	IncludeSubgroups      *bool                        `json:"includeSubgroups,omitempty"`
	API                   *string                      `json:"api,omitempty"`
	TokenRef              *SecretRefApplyConfiguration `json:"tokenRef,omitempty"`
	AllBranches           *bool                        `json:"allBranches,omitempty"`
	Insecure              *bool                        `json:"insecure,omitempty"`
	IncludeSharedProjects *bool                        `json:"includeSharedProjects,omitempty"`
	Topic                 *string                      `json:"topic,omitempty"`
}

// SCMProviderGeneratorGitlabApplyConfiguration constructs an declarative configuration of the SCMProviderGeneratorGitlab type for use with
// apply.
func SCMProviderGeneratorGitlab() *SCMProviderGeneratorGitlabApplyConfiguration {
	return &SCMProviderGeneratorGitlabApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *SCMProviderGeneratorGitlabApplyConfiguration) WithGroup(value string) *SCMProviderGeneratorGitlabApplyConfiguration {
	b.Group = &value
	return b
}

// WithIncludeSubgroups sets the IncludeSubgroups field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IncludeSubgroups field is set to the value of the last call.
func (b *SCMProviderGeneratorGitlabApplyConfiguration) WithIncludeSubgroups(value bool) *SCMProviderGeneratorGitlabApplyConfiguration {
	b.IncludeSubgroups = &value
	return b
}

// WithAPI sets the API field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the API field is set to the value of the last call.
func (b *SCMProviderGeneratorGitlabApplyConfiguration) WithAPI(value string) *SCMProviderGeneratorGitlabApplyConfiguration {
	b.API = &value
	return b
}

// WithTokenRef sets the TokenRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TokenRef field is set to the value of the last call.
func (b *SCMProviderGeneratorGitlabApplyConfiguration) WithTokenRef(value *SecretRefApplyConfiguration) *SCMProviderGeneratorGitlabApplyConfiguration {
	b.TokenRef = value
	return b
}

// WithAllBranches sets the AllBranches field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AllBranches field is set to the value of the last call.
func (b *SCMProviderGeneratorGitlabApplyConfiguration) WithAllBranches(value bool) *SCMProviderGeneratorGitlabApplyConfiguration {
	b.AllBranches = &value
	return b
}

// WithInsecure sets the Insecure field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Insecure field is set to the value of the last call.
func (b *SCMProviderGeneratorGitlabApplyConfiguration) WithInsecure(value bool) *SCMProviderGeneratorGitlabApplyConfiguration {
	b.Insecure = &value
	return b
}

// WithIncludeSharedProjects sets the IncludeSharedProjects field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IncludeSharedProjects field is set to the value of the last call.
func (b *SCMProviderGeneratorGitlabApplyConfiguration) WithIncludeSharedProjects(value bool) *SCMProviderGeneratorGitlabApplyConfiguration {
	b.IncludeSharedProjects = &value
	return b
}

// WithTopic sets the Topic field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Topic field is set to the value of the last call.
func (b *SCMProviderGeneratorGitlabApplyConfiguration) WithTopic(value string) *SCMProviderGeneratorGitlabApplyConfiguration {
	b.Topic = &value
	return b
}
