// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1"
)

// ApplicationSourcePluginApplyConfiguration represents an declarative configuration of the ApplicationSourcePlugin type for use
// with apply.
type ApplicationSourcePluginApplyConfiguration struct {
	Name          *string `json:"name,omitempty"`
	*v1alpha1.Env `json:"env,omitempty"`
	Parameters    *v1alpha1.ApplicationSourcePluginParameters `json:"parameters,omitempty"`
}

// ApplicationSourcePluginApplyConfiguration constructs an declarative configuration of the ApplicationSourcePlugin type for use with
// apply.
func ApplicationSourcePlugin() *ApplicationSourcePluginApplyConfiguration {
	return &ApplicationSourcePluginApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ApplicationSourcePluginApplyConfiguration) WithName(value string) *ApplicationSourcePluginApplyConfiguration {
	b.Name = &value
	return b
}

// WithEnv sets the Env field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Env field is set to the value of the last call.
func (b *ApplicationSourcePluginApplyConfiguration) WithEnv(value v1alpha1.Env) *ApplicationSourcePluginApplyConfiguration {
	b.Env = &value
	return b
}

// WithParameters sets the Parameters field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Parameters field is set to the value of the last call.
func (b *ApplicationSourcePluginApplyConfiguration) WithParameters(value v1alpha1.ApplicationSourcePluginParameters) *ApplicationSourcePluginApplyConfiguration {
	b.Parameters = &value
	return b
}
