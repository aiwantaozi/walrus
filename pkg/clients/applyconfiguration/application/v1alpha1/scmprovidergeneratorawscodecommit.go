// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1"
)

// SCMProviderGeneratorAWSCodeCommitApplyConfiguration represents an declarative configuration of the SCMProviderGeneratorAWSCodeCommit type for use
// with apply.
type SCMProviderGeneratorAWSCodeCommitApplyConfiguration struct {
	TagFilters  []*v1alpha1.TagFilter `json:"tagFilters,omitempty"`
	Role        *string               `json:"role,omitempty"`
	Region      *string               `json:"region,omitempty"`
	AllBranches *bool                 `json:"allBranches,omitempty"`
}

// SCMProviderGeneratorAWSCodeCommitApplyConfiguration constructs an declarative configuration of the SCMProviderGeneratorAWSCodeCommit type for use with
// apply.
func SCMProviderGeneratorAWSCodeCommit() *SCMProviderGeneratorAWSCodeCommitApplyConfiguration {
	return &SCMProviderGeneratorAWSCodeCommitApplyConfiguration{}
}

// WithTagFilters adds the given value to the TagFilters field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the TagFilters field.
func (b *SCMProviderGeneratorAWSCodeCommitApplyConfiguration) WithTagFilters(values ...**v1alpha1.TagFilter) *SCMProviderGeneratorAWSCodeCommitApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithTagFilters")
		}
		b.TagFilters = append(b.TagFilters, *values[i])
	}
	return b
}

// WithRole sets the Role field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Role field is set to the value of the last call.
func (b *SCMProviderGeneratorAWSCodeCommitApplyConfiguration) WithRole(value string) *SCMProviderGeneratorAWSCodeCommitApplyConfiguration {
	b.Role = &value
	return b
}

// WithRegion sets the Region field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Region field is set to the value of the last call.
func (b *SCMProviderGeneratorAWSCodeCommitApplyConfiguration) WithRegion(value string) *SCMProviderGeneratorAWSCodeCommitApplyConfiguration {
	b.Region = &value
	return b
}

// WithAllBranches sets the AllBranches field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AllBranches field is set to the value of the last call.
func (b *SCMProviderGeneratorAWSCodeCommitApplyConfiguration) WithAllBranches(value bool) *SCMProviderGeneratorAWSCodeCommitApplyConfiguration {
	b.AllBranches = &value
	return b
}
