// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1"
)

// SyncStatusApplyConfiguration represents an declarative configuration of the SyncStatus type for use
// with apply.
type SyncStatusApplyConfiguration struct {
	Status     *v1alpha1.SyncStatusCode      `json:"status,omitempty"`
	ComparedTo *ComparedToApplyConfiguration `json:"comparedTo,omitempty"`
	Revision   *string                       `json:"revision,omitempty"`
	Revisions  []string                      `json:"revisions,omitempty"`
}

// SyncStatusApplyConfiguration constructs an declarative configuration of the SyncStatus type for use with
// apply.
func SyncStatus() *SyncStatusApplyConfiguration {
	return &SyncStatusApplyConfiguration{}
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithStatus(value v1alpha1.SyncStatusCode) *SyncStatusApplyConfiguration {
	b.Status = &value
	return b
}

// WithComparedTo sets the ComparedTo field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ComparedTo field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithComparedTo(value *ComparedToApplyConfiguration) *SyncStatusApplyConfiguration {
	b.ComparedTo = value
	return b
}

// WithRevision sets the Revision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Revision field is set to the value of the last call.
func (b *SyncStatusApplyConfiguration) WithRevision(value string) *SyncStatusApplyConfiguration {
	b.Revision = &value
	return b
}

// WithRevisions adds the given value to the Revisions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Revisions field.
func (b *SyncStatusApplyConfiguration) WithRevisions(values ...string) *SyncStatusApplyConfiguration {
	for i := range values {
		b.Revisions = append(b.Revisions, values[i])
	}
	return b
}
