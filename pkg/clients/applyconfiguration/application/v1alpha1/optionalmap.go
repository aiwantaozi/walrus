// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// OptionalMapApplyConfiguration represents an declarative configuration of the OptionalMap type for use
// with apply.
type OptionalMapApplyConfiguration struct {
	Map map[string]string `json:"map,omitempty"`
}

// OptionalMapApplyConfiguration constructs an declarative configuration of the OptionalMap type for use with
// apply.
func OptionalMap() *OptionalMapApplyConfiguration {
	return &OptionalMapApplyConfiguration{}
}

// WithMap puts the entries into the Map field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Map field,
// overwriting an existing map entries in Map field with the same key.
func (b *OptionalMapApplyConfiguration) WithMap(entries map[string]string) *OptionalMapApplyConfiguration {
	if b.Map == nil && len(entries) > 0 {
		b.Map = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.Map[k] = v
	}
	return b
}
