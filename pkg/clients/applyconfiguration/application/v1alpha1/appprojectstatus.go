// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// AppProjectStatusApplyConfiguration represents an declarative configuration of the AppProjectStatus type for use
// with apply.
type AppProjectStatusApplyConfiguration struct {
	JWTTokensByRole map[string]JWTTokensApplyConfiguration `json:"jwtTokensByRole,omitempty"`
}

// AppProjectStatusApplyConfiguration constructs an declarative configuration of the AppProjectStatus type for use with
// apply.
func AppProjectStatus() *AppProjectStatusApplyConfiguration {
	return &AppProjectStatusApplyConfiguration{}
}

// WithJWTTokensByRole puts the entries into the JWTTokensByRole field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the JWTTokensByRole field,
// overwriting an existing map entries in JWTTokensByRole field with the same key.
func (b *AppProjectStatusApplyConfiguration) WithJWTTokensByRole(entries map[string]JWTTokensApplyConfiguration) *AppProjectStatusApplyConfiguration {
	if b.JWTTokensByRole == nil && len(entries) > 0 {
		b.JWTTokensByRole = make(map[string]JWTTokensApplyConfiguration, len(entries))
	}
	for k, v := range entries {
		b.JWTTokensByRole[k] = v
	}
	return b
}
