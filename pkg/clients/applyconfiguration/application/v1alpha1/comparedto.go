// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	applicationv1alpha1 "github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1"
)

// ComparedToApplyConfiguration represents an declarative configuration of the ComparedTo type for use
// with apply.
type ComparedToApplyConfiguration struct {
	Source            *ApplicationSourceApplyConfiguration      `json:"source,omitempty"`
	Destination       *ApplicationDestinationApplyConfiguration `json:"destination,omitempty"`
	Sources           *applicationv1alpha1.ApplicationSources   `json:"sources,omitempty"`
	IgnoreDifferences *applicationv1alpha1.IgnoreDifferences    `json:"ignoreDifferences,omitempty"`
}

// ComparedToApplyConfiguration constructs an declarative configuration of the ComparedTo type for use with
// apply.
func ComparedTo() *ComparedToApplyConfiguration {
	return &ComparedToApplyConfiguration{}
}

// WithSource sets the Source field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Source field is set to the value of the last call.
func (b *ComparedToApplyConfiguration) WithSource(value *ApplicationSourceApplyConfiguration) *ComparedToApplyConfiguration {
	b.Source = value
	return b
}

// WithDestination sets the Destination field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Destination field is set to the value of the last call.
func (b *ComparedToApplyConfiguration) WithDestination(value *ApplicationDestinationApplyConfiguration) *ComparedToApplyConfiguration {
	b.Destination = value
	return b
}

// WithSources sets the Sources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Sources field is set to the value of the last call.
func (b *ComparedToApplyConfiguration) WithSources(value applicationv1alpha1.ApplicationSources) *ComparedToApplyConfiguration {
	b.Sources = &value
	return b
}

// WithIgnoreDifferences sets the IgnoreDifferences field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IgnoreDifferences field is set to the value of the last call.
func (b *ComparedToApplyConfiguration) WithIgnoreDifferences(value applicationv1alpha1.IgnoreDifferences) *ComparedToApplyConfiguration {
	b.IgnoreDifferences = &value
	return b
}
