// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// ArtifactApplyConfiguration represents an declarative configuration of the Artifact type for use
// with apply.
type ArtifactApplyConfiguration struct {
	Name                               *string `json:"name,omitempty"`
	Path                               *string `json:"path,omitempty"`
	Mode                               *int32  `json:"mode,omitempty"`
	From                               *string `json:"from,omitempty"`
	ArtifactLocationApplyConfiguration `json:",inline"`
	GlobalName                         *string                            `json:"globalName,omitempty"`
	Archive                            *ArchiveStrategyApplyConfiguration `json:"archive,omitempty"`
	Optional                           *bool                              `json:"optional,omitempty"`
	SubPath                            *string                            `json:"subPath,omitempty"`
	RecurseMode                        *bool                              `json:"recurseMode,omitempty"`
	FromExpression                     *string                            `json:"fromExpression,omitempty"`
	ArtifactGC                         *ArtifactGCApplyConfiguration      `json:"artifactGC,omitempty"`
	Deleted                            *bool                              `json:"deleted,omitempty"`
}

// ArtifactApplyConfiguration constructs an declarative configuration of the Artifact type for use with
// apply.
func Artifact() *ArtifactApplyConfiguration {
	return &ArtifactApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithName(value string) *ArtifactApplyConfiguration {
	b.Name = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithPath(value string) *ArtifactApplyConfiguration {
	b.Path = &value
	return b
}

// WithMode sets the Mode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mode field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithMode(value int32) *ArtifactApplyConfiguration {
	b.Mode = &value
	return b
}

// WithFrom sets the From field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the From field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithFrom(value string) *ArtifactApplyConfiguration {
	b.From = &value
	return b
}

// WithArchiveLogs sets the ArchiveLogs field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ArchiveLogs field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithArchiveLogs(value bool) *ArtifactApplyConfiguration {
	b.ArchiveLogs = &value
	return b
}

// WithS3 sets the S3 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the S3 field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithS3(value *S3ArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.S3 = value
	return b
}

// WithGit sets the Git field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Git field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithGit(value *GitArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.Git = value
	return b
}

// WithHTTP sets the HTTP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HTTP field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithHTTP(value *HTTPArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.HTTP = value
	return b
}

// WithArtifactory sets the Artifactory field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Artifactory field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithArtifactory(value *ArtifactoryArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.Artifactory = value
	return b
}

// WithHDFS sets the HDFS field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HDFS field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithHDFS(value *HDFSArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.HDFS = value
	return b
}

// WithRaw sets the Raw field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Raw field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithRaw(value *RawArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.Raw = value
	return b
}

// WithOSS sets the OSS field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OSS field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithOSS(value *OSSArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.OSS = value
	return b
}

// WithGCS sets the GCS field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GCS field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithGCS(value *GCSArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.GCS = value
	return b
}

// WithAzure sets the Azure field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Azure field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithAzure(value *AzureArtifactApplyConfiguration) *ArtifactApplyConfiguration {
	b.Azure = value
	return b
}

// WithGlobalName sets the GlobalName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GlobalName field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithGlobalName(value string) *ArtifactApplyConfiguration {
	b.GlobalName = &value
	return b
}

// WithArchive sets the Archive field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Archive field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithArchive(value *ArchiveStrategyApplyConfiguration) *ArtifactApplyConfiguration {
	b.Archive = value
	return b
}

// WithOptional sets the Optional field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Optional field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithOptional(value bool) *ArtifactApplyConfiguration {
	b.Optional = &value
	return b
}

// WithSubPath sets the SubPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SubPath field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithSubPath(value string) *ArtifactApplyConfiguration {
	b.SubPath = &value
	return b
}

// WithRecurseMode sets the RecurseMode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RecurseMode field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithRecurseMode(value bool) *ArtifactApplyConfiguration {
	b.RecurseMode = &value
	return b
}

// WithFromExpression sets the FromExpression field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FromExpression field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithFromExpression(value string) *ArtifactApplyConfiguration {
	b.FromExpression = &value
	return b
}

// WithArtifactGC sets the ArtifactGC field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ArtifactGC field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithArtifactGC(value *ArtifactGCApplyConfiguration) *ArtifactApplyConfiguration {
	b.ArtifactGC = value
	return b
}

// WithDeleted sets the Deleted field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Deleted field is set to the value of the last call.
func (b *ArtifactApplyConfiguration) WithDeleted(value bool) *ArtifactApplyConfiguration {
	b.Deleted = &value
	return b
}
