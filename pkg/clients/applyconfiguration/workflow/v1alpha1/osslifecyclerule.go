// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// OSSLifecycleRuleApplyConfiguration represents an declarative configuration of the OSSLifecycleRule type for use
// with apply.
type OSSLifecycleRuleApplyConfiguration struct {
	MarkInfrequentAccessAfterDays *int32 `json:"markInfrequentAccessAfterDays,omitempty"`
	MarkDeletionAfterDays         *int32 `json:"markDeletionAfterDays,omitempty"`
}

// OSSLifecycleRuleApplyConfiguration constructs an declarative configuration of the OSSLifecycleRule type for use with
// apply.
func OSSLifecycleRule() *OSSLifecycleRuleApplyConfiguration {
	return &OSSLifecycleRuleApplyConfiguration{}
}

// WithMarkInfrequentAccessAfterDays sets the MarkInfrequentAccessAfterDays field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MarkInfrequentAccessAfterDays field is set to the value of the last call.
func (b *OSSLifecycleRuleApplyConfiguration) WithMarkInfrequentAccessAfterDays(value int32) *OSSLifecycleRuleApplyConfiguration {
	b.MarkInfrequentAccessAfterDays = &value
	return b
}

// WithMarkDeletionAfterDays sets the MarkDeletionAfterDays field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MarkDeletionAfterDays field is set to the value of the last call.
func (b *OSSLifecycleRuleApplyConfiguration) WithMarkDeletionAfterDays(value int32) *OSSLifecycleRuleApplyConfiguration {
	b.MarkDeletionAfterDays = &value
	return b
}
