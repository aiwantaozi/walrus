// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// WorkflowTaskSetStatusApplyConfiguration represents an declarative configuration of the WorkflowTaskSetStatus type for use
// with apply.
type WorkflowTaskSetStatusApplyConfiguration struct {
	Nodes map[string]NodeResultApplyConfiguration `json:"nodes,omitempty"`
}

// WorkflowTaskSetStatusApplyConfiguration constructs an declarative configuration of the WorkflowTaskSetStatus type for use with
// apply.
func WorkflowTaskSetStatus() *WorkflowTaskSetStatusApplyConfiguration {
	return &WorkflowTaskSetStatusApplyConfiguration{}
}

// WithNodes puts the entries into the Nodes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Nodes field,
// overwriting an existing map entries in Nodes field with the same key.
func (b *WorkflowTaskSetStatusApplyConfiguration) WithNodes(entries map[string]NodeResultApplyConfiguration) *WorkflowTaskSetStatusApplyConfiguration {
	if b.Nodes == nil && len(entries) > 0 {
		b.Nodes = make(map[string]NodeResultApplyConfiguration, len(entries))
	}
	for k, v := range entries {
		b.Nodes[k] = v
	}
	return b
}
