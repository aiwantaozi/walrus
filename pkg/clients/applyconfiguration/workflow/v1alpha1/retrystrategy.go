// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// RetryStrategyApplyConfiguration represents an declarative configuration of the RetryStrategy type for use
// with apply.
type RetryStrategyApplyConfiguration struct {
	Limit       *intstr.IntOrString              `json:"limit,omitempty"`
	RetryPolicy *v1alpha1.RetryPolicy            `json:"retryPolicy,omitempty"`
	Backoff     *BackoffApplyConfiguration       `json:"backoff,omitempty"`
	Affinity    *RetryAffinityApplyConfiguration `json:"affinity,omitempty"`
	Expression  *string                          `json:"expression,omitempty"`
}

// RetryStrategyApplyConfiguration constructs an declarative configuration of the RetryStrategy type for use with
// apply.
func RetryStrategy() *RetryStrategyApplyConfiguration {
	return &RetryStrategyApplyConfiguration{}
}

// WithLimit sets the Limit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Limit field is set to the value of the last call.
func (b *RetryStrategyApplyConfiguration) WithLimit(value intstr.IntOrString) *RetryStrategyApplyConfiguration {
	b.Limit = &value
	return b
}

// WithRetryPolicy sets the RetryPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RetryPolicy field is set to the value of the last call.
func (b *RetryStrategyApplyConfiguration) WithRetryPolicy(value v1alpha1.RetryPolicy) *RetryStrategyApplyConfiguration {
	b.RetryPolicy = &value
	return b
}

// WithBackoff sets the Backoff field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Backoff field is set to the value of the last call.
func (b *RetryStrategyApplyConfiguration) WithBackoff(value *BackoffApplyConfiguration) *RetryStrategyApplyConfiguration {
	b.Backoff = value
	return b
}

// WithAffinity sets the Affinity field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Affinity field is set to the value of the last call.
func (b *RetryStrategyApplyConfiguration) WithAffinity(value *RetryAffinityApplyConfiguration) *RetryStrategyApplyConfiguration {
	b.Affinity = value
	return b
}

// WithExpression sets the Expression field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Expression field is set to the value of the last call.
func (b *RetryStrategyApplyConfiguration) WithExpression(value string) *RetryStrategyApplyConfiguration {
	b.Expression = &value
	return b
}
