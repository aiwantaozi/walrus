// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	workflowv1alpha1 "github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1"
)

// DataApplyConfiguration represents an declarative configuration of the Data type for use
// with apply.
type DataApplyConfiguration struct {
	Source         *DataSourceApplyConfiguration    `json:"source,omitempty"`
	Transformation *workflowv1alpha1.Transformation `json:"transformation,omitempty"`
}

// DataApplyConfiguration constructs an declarative configuration of the Data type for use with
// apply.
func Data() *DataApplyConfiguration {
	return &DataApplyConfiguration{}
}

// WithSource sets the Source field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Source field is set to the value of the last call.
func (b *DataApplyConfiguration) WithSource(value *DataSourceApplyConfiguration) *DataApplyConfiguration {
	b.Source = value
	return b
}

// WithTransformation sets the Transformation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Transformation field is set to the value of the last call.
func (b *DataApplyConfiguration) WithTransformation(value workflowv1alpha1.Transformation) *DataApplyConfiguration {
	b.Transformation = &value
	return b
}
