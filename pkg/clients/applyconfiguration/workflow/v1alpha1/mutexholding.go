// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// MutexHoldingApplyConfiguration represents an declarative configuration of the MutexHolding type for use
// with apply.
type MutexHoldingApplyConfiguration struct {
	Mutex  *string `json:"mutex,omitempty"`
	Holder *string `json:"holder,omitempty"`
}

// MutexHoldingApplyConfiguration constructs an declarative configuration of the MutexHolding type for use with
// apply.
func MutexHolding() *MutexHoldingApplyConfiguration {
	return &MutexHoldingApplyConfiguration{}
}

// WithMutex sets the Mutex field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mutex field is set to the value of the last call.
func (b *MutexHoldingApplyConfiguration) WithMutex(value string) *MutexHoldingApplyConfiguration {
	b.Mutex = &value
	return b
}

// WithHolder sets the Holder field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Holder field is set to the value of the last call.
func (b *MutexHoldingApplyConfiguration) WithHolder(value string) *MutexHoldingApplyConfiguration {
	b.Holder = &value
	return b
}
