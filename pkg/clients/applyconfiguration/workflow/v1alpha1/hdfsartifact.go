// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/seal-io/walrus/pkg/clients/applyconfiguration/core/v1"
)

// HDFSArtifactApplyConfiguration represents an declarative configuration of the HDFSArtifact type for use
// with apply.
type HDFSArtifactApplyConfiguration struct {
	HDFSConfigApplyConfiguration `json:",inline"`
	Path                         *string `json:"path,omitempty"`
	Force                        *bool   `json:"force,omitempty"`
}

// HDFSArtifactApplyConfiguration constructs an declarative configuration of the HDFSArtifact type for use with
// apply.
func HDFSArtifact() *HDFSArtifactApplyConfiguration {
	return &HDFSArtifactApplyConfiguration{}
}

// WithKrbCCacheSecret sets the KrbCCacheSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbCCacheSecret field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithKrbCCacheSecret(value *v1.SecretKeySelectorApplyConfiguration) *HDFSArtifactApplyConfiguration {
	b.KrbCCacheSecret = value
	return b
}

// WithKrbKeytabSecret sets the KrbKeytabSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbKeytabSecret field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithKrbKeytabSecret(value *v1.SecretKeySelectorApplyConfiguration) *HDFSArtifactApplyConfiguration {
	b.KrbKeytabSecret = value
	return b
}

// WithKrbUsername sets the KrbUsername field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbUsername field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithKrbUsername(value string) *HDFSArtifactApplyConfiguration {
	b.KrbUsername = &value
	return b
}

// WithKrbRealm sets the KrbRealm field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbRealm field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithKrbRealm(value string) *HDFSArtifactApplyConfiguration {
	b.KrbRealm = &value
	return b
}

// WithKrbConfigConfigMap sets the KrbConfigConfigMap field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbConfigConfigMap field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithKrbConfigConfigMap(value *v1.ConfigMapKeySelectorApplyConfiguration) *HDFSArtifactApplyConfiguration {
	b.KrbConfigConfigMap = value
	return b
}

// WithKrbServicePrincipalName sets the KrbServicePrincipalName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbServicePrincipalName field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithKrbServicePrincipalName(value string) *HDFSArtifactApplyConfiguration {
	b.KrbServicePrincipalName = &value
	return b
}

// WithAddresses adds the given value to the Addresses field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Addresses field.
func (b *HDFSArtifactApplyConfiguration) WithAddresses(values ...string) *HDFSArtifactApplyConfiguration {
	for i := range values {
		b.Addresses = append(b.Addresses, values[i])
	}
	return b
}

// WithHDFSUser sets the HDFSUser field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HDFSUser field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithHDFSUser(value string) *HDFSArtifactApplyConfiguration {
	b.HDFSUser = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithPath(value string) *HDFSArtifactApplyConfiguration {
	b.Path = &value
	return b
}

// WithForce sets the Force field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Force field is set to the value of the last call.
func (b *HDFSArtifactApplyConfiguration) WithForce(value bool) *HDFSArtifactApplyConfiguration {
	b.Force = &value
	return b
}
