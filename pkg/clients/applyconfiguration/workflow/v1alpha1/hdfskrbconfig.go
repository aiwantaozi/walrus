// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/seal-io/walrus/pkg/clients/applyconfiguration/core/v1"
)

// HDFSKrbConfigApplyConfiguration represents an declarative configuration of the HDFSKrbConfig type for use
// with apply.
type HDFSKrbConfigApplyConfiguration struct {
	KrbCCacheSecret         *v1.SecretKeySelectorApplyConfiguration    `json:"krbCCacheSecret,omitempty"`
	KrbKeytabSecret         *v1.SecretKeySelectorApplyConfiguration    `json:"krbKeytabSecret,omitempty"`
	KrbUsername             *string                                    `json:"krbUsername,omitempty"`
	KrbRealm                *string                                    `json:"krbRealm,omitempty"`
	KrbConfigConfigMap      *v1.ConfigMapKeySelectorApplyConfiguration `json:"krbConfigConfigMap,omitempty"`
	KrbServicePrincipalName *string                                    `json:"krbServicePrincipalName,omitempty"`
}

// HDFSKrbConfigApplyConfiguration constructs an declarative configuration of the HDFSKrbConfig type for use with
// apply.
func HDFSKrbConfig() *HDFSKrbConfigApplyConfiguration {
	return &HDFSKrbConfigApplyConfiguration{}
}

// WithKrbCCacheSecret sets the KrbCCacheSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbCCacheSecret field is set to the value of the last call.
func (b *HDFSKrbConfigApplyConfiguration) WithKrbCCacheSecret(value *v1.SecretKeySelectorApplyConfiguration) *HDFSKrbConfigApplyConfiguration {
	b.KrbCCacheSecret = value
	return b
}

// WithKrbKeytabSecret sets the KrbKeytabSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbKeytabSecret field is set to the value of the last call.
func (b *HDFSKrbConfigApplyConfiguration) WithKrbKeytabSecret(value *v1.SecretKeySelectorApplyConfiguration) *HDFSKrbConfigApplyConfiguration {
	b.KrbKeytabSecret = value
	return b
}

// WithKrbUsername sets the KrbUsername field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbUsername field is set to the value of the last call.
func (b *HDFSKrbConfigApplyConfiguration) WithKrbUsername(value string) *HDFSKrbConfigApplyConfiguration {
	b.KrbUsername = &value
	return b
}

// WithKrbRealm sets the KrbRealm field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbRealm field is set to the value of the last call.
func (b *HDFSKrbConfigApplyConfiguration) WithKrbRealm(value string) *HDFSKrbConfigApplyConfiguration {
	b.KrbRealm = &value
	return b
}

// WithKrbConfigConfigMap sets the KrbConfigConfigMap field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbConfigConfigMap field is set to the value of the last call.
func (b *HDFSKrbConfigApplyConfiguration) WithKrbConfigConfigMap(value *v1.ConfigMapKeySelectorApplyConfiguration) *HDFSKrbConfigApplyConfiguration {
	b.KrbConfigConfigMap = value
	return b
}

// WithKrbServicePrincipalName sets the KrbServicePrincipalName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KrbServicePrincipalName field is set to the value of the last call.
func (b *HDFSKrbConfigApplyConfiguration) WithKrbServicePrincipalName(value string) *HDFSKrbConfigApplyConfiguration {
	b.KrbServicePrincipalName = &value
	return b
}
