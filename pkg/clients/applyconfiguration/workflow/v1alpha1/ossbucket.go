// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/seal-io/walrus/pkg/clients/applyconfiguration/core/v1"
)

// OSSBucketApplyConfiguration represents an declarative configuration of the OSSBucket type for use
// with apply.
type OSSBucketApplyConfiguration struct {
	Endpoint                 *string                                 `json:"endpoint,omitempty"`
	Bucket                   *string                                 `json:"bucket,omitempty"`
	AccessKeySecret          *v1.SecretKeySelectorApplyConfiguration `json:"accessKeySecret,omitempty"`
	SecretKeySecret          *v1.SecretKeySelectorApplyConfiguration `json:"secretKeySecret,omitempty"`
	CreateBucketIfNotPresent *bool                                   `json:"createBucketIfNotPresent,omitempty"`
	SecurityToken            *string                                 `json:"securityToken,omitempty"`
	LifecycleRule            *OSSLifecycleRuleApplyConfiguration     `json:"lifecycleRule,omitempty"`
	UseSDKCreds              *bool                                   `json:"useSDKCreds,omitempty"`
}

// OSSBucketApplyConfiguration constructs an declarative configuration of the OSSBucket type for use with
// apply.
func OSSBucket() *OSSBucketApplyConfiguration {
	return &OSSBucketApplyConfiguration{}
}

// WithEndpoint sets the Endpoint field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Endpoint field is set to the value of the last call.
func (b *OSSBucketApplyConfiguration) WithEndpoint(value string) *OSSBucketApplyConfiguration {
	b.Endpoint = &value
	return b
}

// WithBucket sets the Bucket field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bucket field is set to the value of the last call.
func (b *OSSBucketApplyConfiguration) WithBucket(value string) *OSSBucketApplyConfiguration {
	b.Bucket = &value
	return b
}

// WithAccessKeySecret sets the AccessKeySecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AccessKeySecret field is set to the value of the last call.
func (b *OSSBucketApplyConfiguration) WithAccessKeySecret(value *v1.SecretKeySelectorApplyConfiguration) *OSSBucketApplyConfiguration {
	b.AccessKeySecret = value
	return b
}

// WithSecretKeySecret sets the SecretKeySecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretKeySecret field is set to the value of the last call.
func (b *OSSBucketApplyConfiguration) WithSecretKeySecret(value *v1.SecretKeySelectorApplyConfiguration) *OSSBucketApplyConfiguration {
	b.SecretKeySecret = value
	return b
}

// WithCreateBucketIfNotPresent sets the CreateBucketIfNotPresent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CreateBucketIfNotPresent field is set to the value of the last call.
func (b *OSSBucketApplyConfiguration) WithCreateBucketIfNotPresent(value bool) *OSSBucketApplyConfiguration {
	b.CreateBucketIfNotPresent = &value
	return b
}

// WithSecurityToken sets the SecurityToken field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecurityToken field is set to the value of the last call.
func (b *OSSBucketApplyConfiguration) WithSecurityToken(value string) *OSSBucketApplyConfiguration {
	b.SecurityToken = &value
	return b
}

// WithLifecycleRule sets the LifecycleRule field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LifecycleRule field is set to the value of the last call.
func (b *OSSBucketApplyConfiguration) WithLifecycleRule(value *OSSLifecycleRuleApplyConfiguration) *OSSBucketApplyConfiguration {
	b.LifecycleRule = value
	return b
}

// WithUseSDKCreds sets the UseSDKCreds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UseSDKCreds field is set to the value of the last call.
func (b *OSSBucketApplyConfiguration) WithUseSDKCreds(value bool) *OSSBucketApplyConfiguration {
	b.UseSDKCreds = &value
	return b
}
