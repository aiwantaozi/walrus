// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/seal-io/walrus/pkg/clients/applyconfiguration/core/v1"
)

// CacheApplyConfiguration represents an declarative configuration of the Cache type for use
// with apply.
type CacheApplyConfiguration struct {
	ConfigMap *v1.ConfigMapKeySelectorApplyConfiguration `json:"configMap,omitempty"`
}

// CacheApplyConfiguration constructs an declarative configuration of the Cache type for use with
// apply.
func Cache() *CacheApplyConfiguration {
	return &CacheApplyConfiguration{}
}

// WithConfigMap sets the ConfigMap field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ConfigMap field is set to the value of the last call.
func (b *CacheApplyConfiguration) WithConfigMap(value *v1.ConfigMapKeySelectorApplyConfiguration) *CacheApplyConfiguration {
	b.ConfigMap = value
	return b
}
