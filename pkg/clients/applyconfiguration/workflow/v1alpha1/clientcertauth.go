// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/seal-io/walrus/pkg/clients/applyconfiguration/core/v1"
)

// ClientCertAuthApplyConfiguration represents an declarative configuration of the ClientCertAuth type for use
// with apply.
type ClientCertAuthApplyConfiguration struct {
	ClientCertSecret *v1.SecretKeySelectorApplyConfiguration `json:"clientCertSecret,omitempty"`
	ClientKeySecret  *v1.SecretKeySelectorApplyConfiguration `json:"clientKeySecret,omitempty"`
}

// ClientCertAuthApplyConfiguration constructs an declarative configuration of the ClientCertAuth type for use with
// apply.
func ClientCertAuth() *ClientCertAuthApplyConfiguration {
	return &ClientCertAuthApplyConfiguration{}
}

// WithClientCertSecret sets the ClientCertSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientCertSecret field is set to the value of the last call.
func (b *ClientCertAuthApplyConfiguration) WithClientCertSecret(value *v1.SecretKeySelectorApplyConfiguration) *ClientCertAuthApplyConfiguration {
	b.ClientCertSecret = value
	return b
}

// WithClientKeySecret sets the ClientKeySecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientKeySecret field is set to the value of the last call.
func (b *ClientCertAuthApplyConfiguration) WithClientKeySecret(value *v1.SecretKeySelectorApplyConfiguration) *ClientCertAuthApplyConfiguration {
	b.ClientKeySecret = value
	return b
}
