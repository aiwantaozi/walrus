// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	workflowv1alpha1 "github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1"
)

// OutputsApplyConfiguration represents an declarative configuration of the Outputs type for use
// with apply.
type OutputsApplyConfiguration struct {
	Parameters []ParameterApplyConfiguration `json:"parameters,omitempty"`
	Artifacts  *workflowv1alpha1.Artifacts   `json:"artifacts,omitempty"`
	Result     *string                       `json:"result,omitempty"`
	ExitCode   *string                       `json:"exitCode,omitempty"`
}

// OutputsApplyConfiguration constructs an declarative configuration of the Outputs type for use with
// apply.
func Outputs() *OutputsApplyConfiguration {
	return &OutputsApplyConfiguration{}
}

// WithParameters adds the given value to the Parameters field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Parameters field.
func (b *OutputsApplyConfiguration) WithParameters(values ...*ParameterApplyConfiguration) *OutputsApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithParameters")
		}
		b.Parameters = append(b.Parameters, *values[i])
	}
	return b
}

// WithArtifacts sets the Artifacts field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Artifacts field is set to the value of the last call.
func (b *OutputsApplyConfiguration) WithArtifacts(value workflowv1alpha1.Artifacts) *OutputsApplyConfiguration {
	b.Artifacts = &value
	return b
}

// WithResult sets the Result field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Result field is set to the value of the last call.
func (b *OutputsApplyConfiguration) WithResult(value string) *OutputsApplyConfiguration {
	b.Result = &value
	return b
}

// WithExitCode sets the ExitCode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExitCode field is set to the value of the last call.
func (b *OutputsApplyConfiguration) WithExitCode(value string) *OutputsApplyConfiguration {
	b.ExitCode = &value
	return b
}
