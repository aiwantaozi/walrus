// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1"
	v1 "github.com/seal-io/walrus/pkg/clients/applyconfiguration/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// CronWorkflowStatusApplyConfiguration represents an declarative configuration of the CronWorkflowStatus type for use
// with apply.
type CronWorkflowStatusApplyConfiguration struct {
	Active            []v1.ObjectReferenceApplyConfiguration `json:"active,omitempty"`
	LastScheduledTime *metav1.Time                           `json:"lastScheduledTime,omitempty"`
	Conditions        *v1alpha1.Conditions                   `json:"conditions,omitempty"`
}

// CronWorkflowStatusApplyConfiguration constructs an declarative configuration of the CronWorkflowStatus type for use with
// apply.
func CronWorkflowStatus() *CronWorkflowStatusApplyConfiguration {
	return &CronWorkflowStatusApplyConfiguration{}
}

// WithActive adds the given value to the Active field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Active field.
func (b *CronWorkflowStatusApplyConfiguration) WithActive(values ...*v1.ObjectReferenceApplyConfiguration) *CronWorkflowStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithActive")
		}
		b.Active = append(b.Active, *values[i])
	}
	return b
}

// WithLastScheduledTime sets the LastScheduledTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastScheduledTime field is set to the value of the last call.
func (b *CronWorkflowStatusApplyConfiguration) WithLastScheduledTime(value metav1.Time) *CronWorkflowStatusApplyConfiguration {
	b.LastScheduledTime = &value
	return b
}

// WithConditions sets the Conditions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Conditions field is set to the value of the last call.
func (b *CronWorkflowStatusApplyConfiguration) WithConditions(value v1alpha1.Conditions) *CronWorkflowStatusApplyConfiguration {
	b.Conditions = &value
	return b
}
