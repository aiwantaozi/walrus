// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

// WorkflowTaskSetSpecApplyConfiguration represents an declarative configuration of the WorkflowTaskSetSpec type for use
// with apply.
type WorkflowTaskSetSpecApplyConfiguration struct {
	Tasks map[string]TemplateApplyConfiguration `json:"tasks,omitempty"`
}

// WorkflowTaskSetSpecApplyConfiguration constructs an declarative configuration of the WorkflowTaskSetSpec type for use with
// apply.
func WorkflowTaskSetSpec() *WorkflowTaskSetSpecApplyConfiguration {
	return &WorkflowTaskSetSpecApplyConfiguration{}
}

// WithTasks puts the entries into the Tasks field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Tasks field,
// overwriting an existing map entries in Tasks field with the same key.
func (b *WorkflowTaskSetSpecApplyConfiguration) WithTasks(entries map[string]TemplateApplyConfiguration) *WorkflowTaskSetSpecApplyConfiguration {
	if b.Tasks == nil && len(entries) > 0 {
		b.Tasks = make(map[string]TemplateApplyConfiguration, len(entries))
	}
	for k, v := range entries {
		b.Tasks[k] = v
	}
	return b
}
