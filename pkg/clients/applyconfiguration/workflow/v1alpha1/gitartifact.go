// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/seal-io/walrus/pkg/clients/applyconfiguration/core/v1"
)

// GitArtifactApplyConfiguration represents an declarative configuration of the GitArtifact type for use
// with apply.
type GitArtifactApplyConfiguration struct {
	Repo                  *string                                 `json:"repo,omitempty"`
	Revision              *string                                 `json:"revision,omitempty"`
	Depth                 *uint64                                 `json:"depth,omitempty"`
	Fetch                 []string                                `json:"fetch,omitempty"`
	UsernameSecret        *v1.SecretKeySelectorApplyConfiguration `json:"usernameSecret,omitempty"`
	PasswordSecret        *v1.SecretKeySelectorApplyConfiguration `json:"passwordSecret,omitempty"`
	SSHPrivateKeySecret   *v1.SecretKeySelectorApplyConfiguration `json:"sshPrivateKeySecret,omitempty"`
	InsecureIgnoreHostKey *bool                                   `json:"insecureIgnoreHostKey,omitempty"`
	DisableSubmodules     *bool                                   `json:"disableSubmodules,omitempty"`
	SingleBranch          *bool                                   `json:"singleBranch,omitempty"`
	Branch                *string                                 `json:"branch,omitempty"`
}

// GitArtifactApplyConfiguration constructs an declarative configuration of the GitArtifact type for use with
// apply.
func GitArtifact() *GitArtifactApplyConfiguration {
	return &GitArtifactApplyConfiguration{}
}

// WithRepo sets the Repo field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Repo field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithRepo(value string) *GitArtifactApplyConfiguration {
	b.Repo = &value
	return b
}

// WithRevision sets the Revision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Revision field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithRevision(value string) *GitArtifactApplyConfiguration {
	b.Revision = &value
	return b
}

// WithDepth sets the Depth field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Depth field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithDepth(value uint64) *GitArtifactApplyConfiguration {
	b.Depth = &value
	return b
}

// WithFetch adds the given value to the Fetch field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Fetch field.
func (b *GitArtifactApplyConfiguration) WithFetch(values ...string) *GitArtifactApplyConfiguration {
	for i := range values {
		b.Fetch = append(b.Fetch, values[i])
	}
	return b
}

// WithUsernameSecret sets the UsernameSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UsernameSecret field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithUsernameSecret(value *v1.SecretKeySelectorApplyConfiguration) *GitArtifactApplyConfiguration {
	b.UsernameSecret = value
	return b
}

// WithPasswordSecret sets the PasswordSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PasswordSecret field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithPasswordSecret(value *v1.SecretKeySelectorApplyConfiguration) *GitArtifactApplyConfiguration {
	b.PasswordSecret = value
	return b
}

// WithSSHPrivateKeySecret sets the SSHPrivateKeySecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SSHPrivateKeySecret field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithSSHPrivateKeySecret(value *v1.SecretKeySelectorApplyConfiguration) *GitArtifactApplyConfiguration {
	b.SSHPrivateKeySecret = value
	return b
}

// WithInsecureIgnoreHostKey sets the InsecureIgnoreHostKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InsecureIgnoreHostKey field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithInsecureIgnoreHostKey(value bool) *GitArtifactApplyConfiguration {
	b.InsecureIgnoreHostKey = &value
	return b
}

// WithDisableSubmodules sets the DisableSubmodules field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DisableSubmodules field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithDisableSubmodules(value bool) *GitArtifactApplyConfiguration {
	b.DisableSubmodules = &value
	return b
}

// WithSingleBranch sets the SingleBranch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SingleBranch field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithSingleBranch(value bool) *GitArtifactApplyConfiguration {
	b.SingleBranch = &value
	return b
}

// WithBranch sets the Branch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Branch field is set to the value of the last call.
func (b *GitArtifactApplyConfiguration) WithBranch(value string) *GitArtifactApplyConfiguration {
	b.Branch = &value
	return b
}
