// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// SubjectProviderExternalConfigApplyConfiguration represents an declarative configuration of the SubjectProviderExternalConfig type for use
// with apply.
type SubjectProviderExternalConfigApplyConfiguration struct {
	Ldap      *SubjectProviderLdapConfigApplyConfiguration      `json:"ldap,omitempty"`
	OAuth     *SubjectProviderOAuthConfigApplyConfiguration     `json:"oauth,omitempty"`
	Oidc      *SubjectProviderOidcConfigApplyConfiguration      `json:"oidc,omitempty"`
	Github    *SubjectProviderGithubConfigApplyConfiguration    `json:"github,omitempty"`
	Gitlab    *SubjectProviderGitlabConfigApplyConfiguration    `json:"gitlab,omitempty"`
	Bitbucket *SubjectProviderBitbucketConfigApplyConfiguration `json:"bitbucket,omitempty"`
	Gitea     *SubjectProviderGiteaConfigApplyConfiguration     `json:"gitea,omitempty"`
	Google    *SubjectProviderGoogleConfigApplyConfiguration    `json:"google,omitempty"`
	Microsoft *SubjectProviderMicrosoftConfigApplyConfiguration `json:"microsoft,omitempty"`
}

// SubjectProviderExternalConfigApplyConfiguration constructs an declarative configuration of the SubjectProviderExternalConfig type for use with
// apply.
func SubjectProviderExternalConfig() *SubjectProviderExternalConfigApplyConfiguration {
	return &SubjectProviderExternalConfigApplyConfiguration{}
}

// WithLdap sets the Ldap field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ldap field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithLdap(value *SubjectProviderLdapConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Ldap = value
	return b
}

// WithOAuth sets the OAuth field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OAuth field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithOAuth(value *SubjectProviderOAuthConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.OAuth = value
	return b
}

// WithOidc sets the Oidc field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Oidc field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithOidc(value *SubjectProviderOidcConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Oidc = value
	return b
}

// WithGithub sets the Github field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Github field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithGithub(value *SubjectProviderGithubConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Github = value
	return b
}

// WithGitlab sets the Gitlab field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Gitlab field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithGitlab(value *SubjectProviderGitlabConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Gitlab = value
	return b
}

// WithBitbucket sets the Bitbucket field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bitbucket field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithBitbucket(value *SubjectProviderBitbucketConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Bitbucket = value
	return b
}

// WithGitea sets the Gitea field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Gitea field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithGitea(value *SubjectProviderGiteaConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Gitea = value
	return b
}

// WithGoogle sets the Google field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Google field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithGoogle(value *SubjectProviderGoogleConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Google = value
	return b
}

// WithMicrosoft sets the Microsoft field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Microsoft field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithMicrosoft(value *SubjectProviderMicrosoftConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Microsoft = value
	return b
}
