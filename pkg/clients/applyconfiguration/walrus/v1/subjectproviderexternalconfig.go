// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// SubjectProviderExternalConfigApplyConfiguration represents an declarative configuration of the SubjectProviderExternalConfig type for use
// with apply.
type SubjectProviderExternalConfigApplyConfiguration struct {
	LDAP      *SubjectProviderLDAPConfigApplyConfiguration      `json:"ldap,omitempty"`
	OAuth     *SubjectProviderOAuthConfigApplyConfiguration     `json:"oauth,omitempty"`
	OIDC      *SubjectProviderOIDCConfigApplyConfiguration      `json:"oidc,omitempty"`
	GitHub    *SubjectProviderGitHubConfigApplyConfiguration    `json:"github,omitempty"`
	GitLab    *SubjectProviderGitLabConfigApplyConfiguration    `json:"gitlab,omitempty"`
	Bitbucket *SubjectProviderBitbucketConfigApplyConfiguration `json:"bitbucket,omitempty"`
	Gitea     *SubjectProviderGiteaConfigApplyConfiguration     `json:"gitea,omitempty"`
	Google    *SubjectProviderGoogleConfigApplyConfiguration    `json:"google,omitempty"`
	Microsoft *SubjectProviderMicrosoftConfigApplyConfiguration `json:"microsoft,omitempty"`
}

// SubjectProviderExternalConfigApplyConfiguration constructs an declarative configuration of the SubjectProviderExternalConfig type for use with
// apply.
func SubjectProviderExternalConfig() *SubjectProviderExternalConfigApplyConfiguration {
	return &SubjectProviderExternalConfigApplyConfiguration{}
}

// WithLDAP sets the LDAP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LDAP field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithLDAP(value *SubjectProviderLDAPConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.LDAP = value
	return b
}

// WithOAuth sets the OAuth field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OAuth field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithOAuth(value *SubjectProviderOAuthConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.OAuth = value
	return b
}

// WithOIDC sets the OIDC field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OIDC field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithOIDC(value *SubjectProviderOIDCConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.OIDC = value
	return b
}

// WithGitHub sets the GitHub field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitHub field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithGitHub(value *SubjectProviderGitHubConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.GitHub = value
	return b
}

// WithGitLab sets the GitLab field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitLab field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithGitLab(value *SubjectProviderGitLabConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.GitLab = value
	return b
}

// WithBitbucket sets the Bitbucket field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bitbucket field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithBitbucket(value *SubjectProviderBitbucketConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Bitbucket = value
	return b
}

// WithGitea sets the Gitea field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Gitea field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithGitea(value *SubjectProviderGiteaConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Gitea = value
	return b
}

// WithGoogle sets the Google field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Google field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithGoogle(value *SubjectProviderGoogleConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Google = value
	return b
}

// WithMicrosoft sets the Microsoft field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Microsoft field is set to the value of the last call.
func (b *SubjectProviderExternalConfigApplyConfiguration) WithMicrosoft(value *SubjectProviderMicrosoftConfigApplyConfiguration) *SubjectProviderExternalConfigApplyConfiguration {
	b.Microsoft = value
	return b
}
