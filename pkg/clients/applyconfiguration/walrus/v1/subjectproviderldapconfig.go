// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// SubjectProviderLdapConfigApplyConfiguration represents an declarative configuration of the SubjectProviderLdapConfig type for use
// with apply.
type SubjectProviderLdapConfigApplyConfiguration struct {
	Host                   *string                                           `json:"host,omitempty"`
	SkipInsecureVerify     *bool                                             `json:"skipInsecureVerify,omitempty"`
	ServiceAccountDN       *string                                           `json:"serviceAccountDN,omitempty"`
	ServiceAccountPassword *string                                           `json:"serviceAccountPassword,omitempty"`
	GroupSearch            *SubjectProviderLdapGroupSearchApplyConfiguration `json:"groupSearch,omitempty"`
	UserSearch             *SubjectProviderLdapUserSearchApplyConfiguration  `json:"userSearch,omitempty"`
}

// SubjectProviderLdapConfigApplyConfiguration constructs an declarative configuration of the SubjectProviderLdapConfig type for use with
// apply.
func SubjectProviderLdapConfig() *SubjectProviderLdapConfigApplyConfiguration {
	return &SubjectProviderLdapConfigApplyConfiguration{}
}

// WithHost sets the Host field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Host field is set to the value of the last call.
func (b *SubjectProviderLdapConfigApplyConfiguration) WithHost(value string) *SubjectProviderLdapConfigApplyConfiguration {
	b.Host = &value
	return b
}

// WithSkipInsecureVerify sets the SkipInsecureVerify field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SkipInsecureVerify field is set to the value of the last call.
func (b *SubjectProviderLdapConfigApplyConfiguration) WithSkipInsecureVerify(value bool) *SubjectProviderLdapConfigApplyConfiguration {
	b.SkipInsecureVerify = &value
	return b
}

// WithServiceAccountDN sets the ServiceAccountDN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceAccountDN field is set to the value of the last call.
func (b *SubjectProviderLdapConfigApplyConfiguration) WithServiceAccountDN(value string) *SubjectProviderLdapConfigApplyConfiguration {
	b.ServiceAccountDN = &value
	return b
}

// WithServiceAccountPassword sets the ServiceAccountPassword field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceAccountPassword field is set to the value of the last call.
func (b *SubjectProviderLdapConfigApplyConfiguration) WithServiceAccountPassword(value string) *SubjectProviderLdapConfigApplyConfiguration {
	b.ServiceAccountPassword = &value
	return b
}

// WithGroupSearch sets the GroupSearch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GroupSearch field is set to the value of the last call.
func (b *SubjectProviderLdapConfigApplyConfiguration) WithGroupSearch(value *SubjectProviderLdapGroupSearchApplyConfiguration) *SubjectProviderLdapConfigApplyConfiguration {
	b.GroupSearch = value
	return b
}

// WithUserSearch sets the UserSearch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UserSearch field is set to the value of the last call.
func (b *SubjectProviderLdapConfigApplyConfiguration) WithUserSearch(value *SubjectProviderLdapUserSearchApplyConfiguration) *SubjectProviderLdapConfigApplyConfiguration {
	b.UserSearch = value
	return b
}
