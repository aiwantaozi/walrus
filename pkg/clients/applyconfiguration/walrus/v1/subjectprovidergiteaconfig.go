// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walrus/v1"
)

// SubjectProviderGiteaConfigApplyConfiguration represents an declarative configuration of the SubjectProviderGiteaConfig type for use
// with apply.
type SubjectProviderGiteaConfigApplyConfiguration struct {
	ClientID     *string                             `json:"clientID,omitempty"`
	ClientSecret *string                             `json:"clientSecret,omitempty"`
	Groups       *v1.SubjectProviderGitGroupsMatcher `json:"groups,omitempty"`
}

// SubjectProviderGiteaConfigApplyConfiguration constructs an declarative configuration of the SubjectProviderGiteaConfig type for use with
// apply.
func SubjectProviderGiteaConfig() *SubjectProviderGiteaConfigApplyConfiguration {
	return &SubjectProviderGiteaConfigApplyConfiguration{}
}

// WithClientID sets the ClientID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientID field is set to the value of the last call.
func (b *SubjectProviderGiteaConfigApplyConfiguration) WithClientID(value string) *SubjectProviderGiteaConfigApplyConfiguration {
	b.ClientID = &value
	return b
}

// WithClientSecret sets the ClientSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientSecret field is set to the value of the last call.
func (b *SubjectProviderGiteaConfigApplyConfiguration) WithClientSecret(value string) *SubjectProviderGiteaConfigApplyConfiguration {
	b.ClientSecret = &value
	return b
}

// WithGroups sets the Groups field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Groups field is set to the value of the last call.
func (b *SubjectProviderGiteaConfigApplyConfiguration) WithGroups(value v1.SubjectProviderGitGroupsMatcher) *SubjectProviderGiteaConfigApplyConfiguration {
	b.Groups = &value
	return b
}
