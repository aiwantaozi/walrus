// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// SubjectProviderLdapGroupSearchApplyConfiguration represents an declarative configuration of the SubjectProviderLdapGroupSearch type for use
// with apply.
type SubjectProviderLdapGroupSearchApplyConfiguration struct {
	BaseDN        *string                                                       `json:"baseDN,omitempty"`
	Filter        *string                                                       `json:"filter,omitempty"`
	UserMatchers  []SubjectProviderLdapGroupSearchUserMatcherApplyConfiguration `json:"userMatchers,omitempty"`
	NameAttribute *string                                                       `json:"nameAttribute,omitempty"`
}

// SubjectProviderLdapGroupSearchApplyConfiguration constructs an declarative configuration of the SubjectProviderLdapGroupSearch type for use with
// apply.
func SubjectProviderLdapGroupSearch() *SubjectProviderLdapGroupSearchApplyConfiguration {
	return &SubjectProviderLdapGroupSearchApplyConfiguration{}
}

// WithBaseDN sets the BaseDN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BaseDN field is set to the value of the last call.
func (b *SubjectProviderLdapGroupSearchApplyConfiguration) WithBaseDN(value string) *SubjectProviderLdapGroupSearchApplyConfiguration {
	b.BaseDN = &value
	return b
}

// WithFilter sets the Filter field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Filter field is set to the value of the last call.
func (b *SubjectProviderLdapGroupSearchApplyConfiguration) WithFilter(value string) *SubjectProviderLdapGroupSearchApplyConfiguration {
	b.Filter = &value
	return b
}

// WithUserMatchers adds the given value to the UserMatchers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the UserMatchers field.
func (b *SubjectProviderLdapGroupSearchApplyConfiguration) WithUserMatchers(values ...*SubjectProviderLdapGroupSearchUserMatcherApplyConfiguration) *SubjectProviderLdapGroupSearchApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithUserMatchers")
		}
		b.UserMatchers = append(b.UserMatchers, *values[i])
	}
	return b
}

// WithNameAttribute sets the NameAttribute field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NameAttribute field is set to the value of the last call.
func (b *SubjectProviderLdapGroupSearchApplyConfiguration) WithNameAttribute(value string) *SubjectProviderLdapGroupSearchApplyConfiguration {
	b.NameAttribute = &value
	return b
}
