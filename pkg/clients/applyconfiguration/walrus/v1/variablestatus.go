// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walrus/v1"
)

// VariableStatusApplyConfiguration represents an declarative configuration of the VariableStatus type for use
// with apply.
type VariableStatusApplyConfiguration struct {
	Scope *v1.VariableScope `json:"scope,omitempty"`
	Value *string           `json:"value,omitempty"`
}

// VariableStatusApplyConfiguration constructs an declarative configuration of the VariableStatus type for use with
// apply.
func VariableStatus() *VariableStatusApplyConfiguration {
	return &VariableStatusApplyConfiguration{}
}

// WithScope sets the Scope field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Scope field is set to the value of the last call.
func (b *VariableStatusApplyConfiguration) WithScope(value v1.VariableScope) *VariableStatusApplyConfiguration {
	b.Scope = &value
	return b
}

// WithValue sets the Value field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Value field is set to the value of the last call.
func (b *VariableStatusApplyConfiguration) WithValue(value string) *VariableStatusApplyConfiguration {
	b.Value = &value
	return b
}
