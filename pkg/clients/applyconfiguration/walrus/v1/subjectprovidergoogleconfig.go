// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// SubjectProviderGoogleConfigApplyConfiguration represents an declarative configuration of the SubjectProviderGoogleConfig type for use
// with apply.
type SubjectProviderGoogleConfigApplyConfiguration struct {
	ClientID     *string  `json:"clientID,omitempty"`
	ClientSecret *string  `json:"clientSecret,omitempty"`
	Groups       []string `json:"groups,omitempty"`
}

// SubjectProviderGoogleConfigApplyConfiguration constructs an declarative configuration of the SubjectProviderGoogleConfig type for use with
// apply.
func SubjectProviderGoogleConfig() *SubjectProviderGoogleConfigApplyConfiguration {
	return &SubjectProviderGoogleConfigApplyConfiguration{}
}

// WithClientID sets the ClientID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientID field is set to the value of the last call.
func (b *SubjectProviderGoogleConfigApplyConfiguration) WithClientID(value string) *SubjectProviderGoogleConfigApplyConfiguration {
	b.ClientID = &value
	return b
}

// WithClientSecret sets the ClientSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientSecret field is set to the value of the last call.
func (b *SubjectProviderGoogleConfigApplyConfiguration) WithClientSecret(value string) *SubjectProviderGoogleConfigApplyConfiguration {
	b.ClientSecret = &value
	return b
}

// WithGroups adds the given value to the Groups field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Groups field.
func (b *SubjectProviderGoogleConfigApplyConfiguration) WithGroups(values ...string) *SubjectProviderGoogleConfigApplyConfiguration {
	for i := range values {
		b.Groups = append(b.Groups, values[i])
	}
	return b
}
