// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// SubjectProviderOidcConfigApplyConfiguration represents an declarative configuration of the SubjectProviderOidcConfig type for use
// with apply.
type SubjectProviderOidcConfigApplyConfiguration struct {
	Issuer             *string                                             `json:"issuer,omitempty"`
	SkipInsecureVerify *bool                                               `json:"skipInsecureVerify,omitempty"`
	ClientID           *string                                             `json:"clientID,omitempty"`
	ClientSecret       *string                                             `json:"clientSecret,omitempty"`
	ClaimMapping       *SubjectProviderOAuthClaimMappingApplyConfiguration `json:"claimMapping,omitempty"`
}

// SubjectProviderOidcConfigApplyConfiguration constructs an declarative configuration of the SubjectProviderOidcConfig type for use with
// apply.
func SubjectProviderOidcConfig() *SubjectProviderOidcConfigApplyConfiguration {
	return &SubjectProviderOidcConfigApplyConfiguration{}
}

// WithIssuer sets the Issuer field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Issuer field is set to the value of the last call.
func (b *SubjectProviderOidcConfigApplyConfiguration) WithIssuer(value string) *SubjectProviderOidcConfigApplyConfiguration {
	b.Issuer = &value
	return b
}

// WithSkipInsecureVerify sets the SkipInsecureVerify field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SkipInsecureVerify field is set to the value of the last call.
func (b *SubjectProviderOidcConfigApplyConfiguration) WithSkipInsecureVerify(value bool) *SubjectProviderOidcConfigApplyConfiguration {
	b.SkipInsecureVerify = &value
	return b
}

// WithClientID sets the ClientID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientID field is set to the value of the last call.
func (b *SubjectProviderOidcConfigApplyConfiguration) WithClientID(value string) *SubjectProviderOidcConfigApplyConfiguration {
	b.ClientID = &value
	return b
}

// WithClientSecret sets the ClientSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientSecret field is set to the value of the last call.
func (b *SubjectProviderOidcConfigApplyConfiguration) WithClientSecret(value string) *SubjectProviderOidcConfigApplyConfiguration {
	b.ClientSecret = &value
	return b
}

// WithClaimMapping sets the ClaimMapping field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClaimMapping field is set to the value of the last call.
func (b *SubjectProviderOidcConfigApplyConfiguration) WithClaimMapping(value *SubjectProviderOAuthClaimMappingApplyConfiguration) *SubjectProviderOidcConfigApplyConfiguration {
	b.ClaimMapping = value
	return b
}
