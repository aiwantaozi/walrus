// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	walruscorev1 "github.com/seal-io/walrus/pkg/apis/walruscore/v1"
)

// ConnectorReferenceWithTypeApplyConfiguration represents an declarative configuration of the ConnectorReferenceWithType type for use
// with apply.
type ConnectorReferenceWithTypeApplyConfiguration struct {
	ConnectorReferenceApplyConfiguration `json:",inline"`
	Category                             *walruscorev1.ConnectorCategory `json:"category,omitempty"`
	Type                                 *string                         `json:"type,omitempty"`
}

// ConnectorReferenceWithTypeApplyConfiguration constructs an declarative configuration of the ConnectorReferenceWithType type for use with
// apply.
func ConnectorReferenceWithType() *ConnectorReferenceWithTypeApplyConfiguration {
	return &ConnectorReferenceWithTypeApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ConnectorReferenceWithTypeApplyConfiguration) WithName(value string) *ConnectorReferenceWithTypeApplyConfiguration {
	b.Name = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ConnectorReferenceWithTypeApplyConfiguration) WithNamespace(value string) *ConnectorReferenceWithTypeApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithCategory sets the Category field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Category field is set to the value of the last call.
func (b *ConnectorReferenceWithTypeApplyConfiguration) WithCategory(value walruscorev1.ConnectorCategory) *ConnectorReferenceWithTypeApplyConfiguration {
	b.Category = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ConnectorReferenceWithTypeApplyConfiguration) WithType(value string) *ConnectorReferenceWithTypeApplyConfiguration {
	b.Type = &value
	return b
}
