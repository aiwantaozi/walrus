// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// TemplateSpecApplyConfiguration represents an declarative configuration of the TemplateSpec type for use
// with apply.
type TemplateSpecApplyConfiguration struct {
	TemplateFormat *string                          `json:"templateFormat,omitempty"`
	Description    *string                          `json:"description,omitempty"`
	VCSRepository  *VCSRepositoryApplyConfiguration `json:"vcsRepository,omitempty"`
}

// TemplateSpecApplyConfiguration constructs an declarative configuration of the TemplateSpec type for use with
// apply.
func TemplateSpec() *TemplateSpecApplyConfiguration {
	return &TemplateSpecApplyConfiguration{}
}

// WithTemplateFormat sets the TemplateFormat field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TemplateFormat field is set to the value of the last call.
func (b *TemplateSpecApplyConfiguration) WithTemplateFormat(value string) *TemplateSpecApplyConfiguration {
	b.TemplateFormat = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *TemplateSpecApplyConfiguration) WithDescription(value string) *TemplateSpecApplyConfiguration {
	b.Description = &value
	return b
}

// WithVCSRepository sets the VCSRepository field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VCSRepository field is set to the value of the last call.
func (b *TemplateSpecApplyConfiguration) WithVCSRepository(value *VCSRepositoryApplyConfiguration) *TemplateSpecApplyConfiguration {
	b.VCSRepository = value
	return b
}
