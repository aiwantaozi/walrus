// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// HelmRepositorySourceApplyConfiguration represents an declarative configuration of the HelmRepositorySource type for use
// with apply.
type HelmRepositorySourceApplyConfiguration struct {
	BasicAuthApplyConfiguration `json:",inline"`
	URL                         *string `json:"url,omitempty"`
}

// HelmRepositorySourceApplyConfiguration constructs an declarative configuration of the HelmRepositorySource type for use with
// apply.
func HelmRepositorySource() *HelmRepositorySourceApplyConfiguration {
	return &HelmRepositorySourceApplyConfiguration{}
}

// WithUsername sets the Username field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Username field is set to the value of the last call.
func (b *HelmRepositorySourceApplyConfiguration) WithUsername(value string) *HelmRepositorySourceApplyConfiguration {
	b.Username = &value
	return b
}

// WithPassword sets the Password field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Password field is set to the value of the last call.
func (b *HelmRepositorySourceApplyConfiguration) WithPassword(value string) *HelmRepositorySourceApplyConfiguration {
	b.Password = &value
	return b
}

// WithSecretRef sets the SecretRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretRef field is set to the value of the last call.
func (b *HelmRepositorySourceApplyConfiguration) WithSecretRef(value *BasicAuthObjectReferenceApplyConfiguration) *HelmRepositorySourceApplyConfiguration {
	b.SecretRef = value
	return b
}

// WithURL sets the URL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the URL field is set to the value of the last call.
func (b *HelmRepositorySourceApplyConfiguration) WithURL(value string) *HelmRepositorySourceApplyConfiguration {
	b.URL = &value
	return b
}
