// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// CatalogSpecApplyConfiguration represents an declarative configuration of the CatalogSpec type for use
// with apply.
type CatalogSpecApplyConfiguration struct {
	Description    *string                      `json:"description,omitempty"`
	Builtin        *bool                        `json:"builtin,omitempty"`
	TemplateFormat *string                      `json:"templateFormat,omitempty"`
	Filters        *FiltersApplyConfiguration   `json:"filters,omitempty"`
	VCSSource      *VCSSourceApplyConfiguration `json:"vcsSource,omitempty"`
}

// CatalogSpecApplyConfiguration constructs an declarative configuration of the CatalogSpec type for use with
// apply.
func CatalogSpec() *CatalogSpecApplyConfiguration {
	return &CatalogSpecApplyConfiguration{}
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *CatalogSpecApplyConfiguration) WithDescription(value string) *CatalogSpecApplyConfiguration {
	b.Description = &value
	return b
}

// WithBuiltin sets the Builtin field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Builtin field is set to the value of the last call.
func (b *CatalogSpecApplyConfiguration) WithBuiltin(value bool) *CatalogSpecApplyConfiguration {
	b.Builtin = &value
	return b
}

// WithTemplateFormat sets the TemplateFormat field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TemplateFormat field is set to the value of the last call.
func (b *CatalogSpecApplyConfiguration) WithTemplateFormat(value string) *CatalogSpecApplyConfiguration {
	b.TemplateFormat = &value
	return b
}

// WithFilters sets the Filters field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Filters field is set to the value of the last call.
func (b *CatalogSpecApplyConfiguration) WithFilters(value *FiltersApplyConfiguration) *CatalogSpecApplyConfiguration {
	b.Filters = value
	return b
}

// WithVCSSource sets the VCSSource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VCSSource field is set to the value of the last call.
func (b *CatalogSpecApplyConfiguration) WithVCSSource(value *VCSSourceApplyConfiguration) *CatalogSpecApplyConfiguration {
	b.VCSSource = value
	return b
}
