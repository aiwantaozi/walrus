// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

// TemplateReferenceWithVersionApplyConfiguration represents an declarative configuration of the TemplateReferenceWithVersion type for use
// with apply.
type TemplateReferenceWithVersionApplyConfiguration struct {
	TemplateReferenceApplyConfiguration `json:",inline"`
	Version                             *string `json:"version,omitempty"`
}

// TemplateReferenceWithVersionApplyConfiguration constructs an declarative configuration of the TemplateReferenceWithVersion type for use with
// apply.
func TemplateReferenceWithVersion() *TemplateReferenceWithVersionApplyConfiguration {
	return &TemplateReferenceWithVersionApplyConfiguration{}
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *TemplateReferenceWithVersionApplyConfiguration) WithNamespace(value string) *TemplateReferenceWithVersionApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *TemplateReferenceWithVersionApplyConfiguration) WithName(value string) *TemplateReferenceWithVersionApplyConfiguration {
	b.Name = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *TemplateReferenceWithVersionApplyConfiguration) WithVersion(value string) *TemplateReferenceWithVersionApplyConfiguration {
	b.Version = &value
	return b
}
