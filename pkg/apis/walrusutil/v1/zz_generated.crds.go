//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

func GetCustomResourceDefinitions() map[string]*v1.CustomResourceDefinition {
	return map[string]*v1.CustomResourceDefinition{
		"ScheduleTask": crd_pkg_apis_walrusutil_v1_ScheduleTask(),
	}
}

func crd_pkg_apis_walrusutil_v1_ScheduleTask() *v1.CustomResourceDefinition {
	return &v1.CustomResourceDefinition{
		TypeMeta: metav1.TypeMeta{
			APIVersion: "apiextensions.k8s.io/v1",
			Kind:       "CustomResourceDefinition",
		},
		ObjectMeta: metav1.ObjectMeta{
			Name: "scheduletasks.walrusutil.seal.io",
		},
		Spec: v1.CustomResourceDefinitionSpec{
			Group: "walrusutil.seal.io",
			Names: v1.CustomResourceDefinitionNames{
				Plural:   "scheduletasks",
				Singular: "scheduletask",
				Kind:     "ScheduleTask",
				ListKind: "ScheduleTaskList",
			},
			Scope: "Namespaced",
			Versions: []v1.CustomResourceDefinitionVersion{
				{
					Name:    "v1",
					Served:  true,
					Storage: true,
					Schema: &v1.CustomResourceValidation{
						OpenAPIV3Schema: &v1.JSONSchemaProps{
							Description: "ScheduleTask is the schema for the scheduletasks API.",
							Type:        "object",
							Required: []string{
								"spec",
							},
							Properties: map[string]v1.JSONSchemaProps{
								"apiVersion": {
									Type: "string",
								},
								"kind": {
									Type: "string",
								},
								"metadata": {
									Type: "object",
								},
								"spec": {
									Type: "object",
									Required: []string{
										"schedule",
									},
									Properties: map[string]v1.JSONSchemaProps{
										"activeTaskDeadlineSeconds": {
											Description: "ActiveTaskDeadlineSeconds specifies the active task timeout duration in seconds,\nif not specified, the default timeout is three times the schedule interval, with a maximum timeout of 6 hours.",
											Type:        "integer",
											Format:      "int64",
											Nullable:    true,
										},
										"await": {
											Description: "Await is a flag that, when set to true,\nindicates that the task should wait until the scheduled time to execute when creating the scheduled task.",
											Type:        "boolean",
										},
										"schedule": {
											Description: "Schedule is a schedule to run the task in Cron format,\nsee https://en.wikipedia.org/wiki/Cron.",
											Type:        "string",
										},
										"suspend": {
											Description: "Suspend, when set to true, prevents new task from starting,\nit does not affect already started task.",
											Type:        "boolean",
										},
										"timeZone": {
											Description: "TimeZone specifies the timezone used for calculating the cron schedule,\nif not provided, the default is the local time of the machine,\nsee https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
											Type:        "string",
											Nullable:    true,
										},
									},
								},
								"status": {
									Type: "object",
									Properties: map[string]v1.JSONSchemaProps{
										"activeTaskName": {
											Description: "ActiveTaskName is the currently running task names.",
											Type:        "string",
											Nullable:    true,
										},
										"activeTaskTimeoutTime": {
											Description: "ActiveTaskTimeoutTime is the time currently running task timeout.",
											Type:        "string",
											Format:      "date-time",
											Nullable:    true,
										},
										"lastFailedMessage": {
											Description: "LastFailedMessage is the last error message of the failed task.",
											Type:        "string",
										},
										"lastFailedTime": {
											Description: "LastFailedTime is the last time the task failed.",
											Type:        "string",
											Format:      "date-time",
											Nullable:    true,
										},
										"lastScheduleTime": {
											Description: "LastScheduleTime is the last time the task was successfully scheduled.",
											Type:        "string",
											Format:      "date-time",
											Nullable:    true,
										},
										"lastSuccessfulTime": {
											Description: "LastSuccessfulTime is the last time the task successfully completed.",
											Type:        "string",
											Format:      "date-time",
											Nullable:    true,
										},
										"schedule": {
											Description: "Schedule is the current schedule to run the task in Cron format,\nsee https://en.wikipedia.org/wiki/Cron.",
											Type:        "string",
										},
									},
								},
							},
						},
					},
					Subresources: &v1.CustomResourceSubresources{
						Status: &v1.CustomResourceSubresourceStatus{},
					},
				},
			},
		},
	}
}
